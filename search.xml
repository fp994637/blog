<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>实现倒计时效果</title>
    <url>/feng-pan-fp/myblog.git/2021/04/20/Rubikscube%20/</url>
    <content><![CDATA[<h1 id="个人喜欢记录东西，每当写完一个功能都喜欢存放到一个地方，方便下次使用"><a href="#个人喜欢记录东西，每当写完一个功能都喜欢存放到一个地方，方便下次使用" class="headerlink" title="个人喜欢记录东西，每当写完一个功能都喜欢存放到一个地方，方便下次使用"></a>个人喜欢记录东西，每当写完一个功能都喜欢存放到一个地方，方便下次使用</h1><p>css样式</p>
<pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">
        <span class="token selector"><span class="token id">#box</span> </span><span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#eee</span><span class="token punctuation">;</span>
            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">20</span>px auto<span class="token punctuation">;</span>
            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token id">#box</span> h3 </span><span class="token punctuation">{</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">32</span>px<span class="token punctuation">;</span>
            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token id">#box</span> input </span><span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">button </span><span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">160</span>px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">160</span>px<span class="token punctuation">;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span>
            <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>
            <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token class">.p1</span> span </span><span class="token punctuation">{</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token class">.p2</span> </span><span class="token punctuation">{</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token class">.p2</span> span </span><span class="token punctuation">{</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>js样式</p>
<pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>
        <span class="token comment" spellcheck="true">//1.输入目标时间  点击开始按钮  获取目标时间 将目标时间渲染在 p1标签的span中</span>
        <span class="token comment" spellcheck="true">//并在p2中开始倒计时</span>
        <span class="token comment" spellcheck="true">//1.获取元素</span>
        <span class="token keyword">var</span> inps <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> spans <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"span"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//2.点击开始按钮</span>
        btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//获取目标时间 将目标时间渲染在 p1标签的span中</span>
            <span class="token keyword">var</span> y <span class="token operator">=</span> inps<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token operator">*</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> m <span class="token operator">=</span> inps<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token operator">*</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> d <span class="token operator">=</span> inps<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token operator">*</span><span class="token number">1</span><span class="token punctuation">;</span>
            spans<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> y<span class="token operator">+</span><span class="token string">"年"</span><span class="token operator">+</span>m<span class="token operator">+</span><span class="token string">"月"</span><span class="token operator">+</span>d<span class="token operator">+</span><span class="token string">"日"</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//并在p2中开始倒计时</span>
            <span class="token keyword">var</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span>m<span class="token number">-1</span><span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">function</span> <span class="token function">auto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">var</span> cha <span class="token operator">=</span> target <span class="token operator">-</span> current<span class="token punctuation">;</span>
                cha <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>cha<span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将时间差单位换算为s</span>
                <span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>cha<span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">var</span> h <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>cha<span class="token operator">%</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">var</span> m <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>cha<span class="token operator">%</span><span class="token number">3600</span><span class="token operator">/</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">var</span> s <span class="token operator">=</span> cha<span class="token operator">%</span><span class="token number">60</span><span class="token punctuation">;</span>
                spans<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> d<span class="token punctuation">;</span>
                spans<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> h<span class="token punctuation">;</span>
                spans<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> m<span class="token punctuation">;</span>
                spans<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> s<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">auto</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>auto<span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="方法很多种，看个人写代码的习惯"><a href="#方法很多种，看个人写代码的习惯" class="headerlink" title="方法很多种，看个人写代码的习惯"></a>方法很多种，看个人写代码的习惯</h5>]]></content>
      <categories>
        <category>深度学习.核心js代码及思路</category>
      </categories>
  </entry>
  <entry>
    <title>前端知识梳理之CSS篇</title>
    <url>/feng-pan-fp/myblog.git/2021/04/20/article-title/</url>
    <content><![CDATA[<h1 id="前端知识梳理之CSS篇"><a href="#前端知识梳理之CSS篇" class="headerlink" title="前端知识梳理之CSS篇"></a>前端知识梳理之CSS篇</h1><h2 id="熟悉HTML知识"><a href="#熟悉HTML知识" class="headerlink" title="熟悉HTML知识"></a>熟悉HTML知识</h2><h3 id="HTML常见元素"><a href="#HTML常见元素" class="headerlink" title="HTML常见元素"></a>HTML常见元素</h3><h4 id="head-部分"><a href="#head-部分" class="headerlink" title="head 部分"></a><code>head</code> 部分</h4><p><a href="https://img-blog.csdnimg.cn/20200517135332751.png"><img src="https://img-blog.csdnimg.cn/20200517135332751.png" alt="img"></a></p>
<h4 id="body部分"><a href="#body部分" class="headerlink" title="body部分"></a><code>body</code>部分</h4><p><a href="https://img-blog.csdnimg.cn/20200517135355522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200517135355522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<h3 id="doctype的意义是什么"><a href="#doctype的意义是什么" class="headerlink" title="doctype的意义是什么"></a>doctype的意义是什么</h3><ul>
<li>让浏览器以标准模式渲染</li>
<li>让浏览器知道元素的合法性</li>
</ul>
<h3 id="HTML、XHTML、HTML5的关系"><a href="#HTML、XHTML、HTML5的关系" class="headerlink" title="HTML、XHTML、HTML5的关系"></a>HTML、XHTML、HTML5的关系</h3><ul>
<li><p>HTML属于SGML（标记语言）</p>
</li>
<li><p>XHTML属于XML，是HTML进行XML严格化的结果</p>
</li>
<li><p>HTML5不属于SGML或XML，比XHTML宽松</p>
<h3 id="HTML5有什么变化"><a href="#HTML5有什么变化" class="headerlink" title="HTML5有什么变化"></a>HTML5有什么变化</h3></li>
<li><p>新的语义化元素</p>
</li>
<li><p>表单增强</p>
</li>
<li><p>新的API（离线、音视频、图形、实时通信、本地存储、设备能力）</p>
</li>
<li><p>分类和嵌套变更</p>
</li>
</ul>
<h3 id="em和-i-有什么区别"><a href="#em和-i-有什么区别" class="headerlink" title="em和 i 有什么区别"></a>em和 i 有什么区别</h3><ul>
<li>em是语义化的标签，表强调</li>
<li>i 是纯样式的标签，表斜体</li>
<li>HTML5中 i 不推荐使用，一般用作图标</li>
</ul>
<h3 id="语义化的意义"><a href="#语义化的意义" class="headerlink" title="语义化的意义"></a>语义化的意义</h3><ul>
<li>开发者容易理解</li>
<li>机器容易理解（搜索、读屏、软件）</li>
<li>有利用SEO</li>
<li>semantic microdata（语义微数据）例电影有评分</li>
</ul>
<h3 id="哪些元素可以自闭合"><a href="#哪些元素可以自闭合" class="headerlink" title="哪些元素可以自闭合"></a>哪些元素可以自闭合</h3><ul>
<li>表单元素 input</li>
<li>图片 img</li>
<li>br hr</li>
<li>meta link</li>
</ul>
<h3 id="HTML和DOM关系"><a href="#HTML和DOM关系" class="headerlink" title="HTML和DOM关系"></a>HTML和DOM关系</h3><ul>
<li>HTML是“死”的（字符串）</li>
<li>DOM是由HTML解析而来的，是活的</li>
<li>JS可以维护DOM</li>
</ul>
<h3 id="property-和-attritube-区别"><a href="#property-和-attritube-区别" class="headerlink" title="property 和 attritube 区别"></a>property 和 attritube 区别</h3><ul>
<li>attritube 是“死”的</li>
<li>property 是活的</li>
<li>相互之间不会影响</li>
</ul>
<h3 id="form的好处"><a href="#form的好处" class="headerlink" title="form的好处"></a>form的好处</h3><ul>
<li>直接提交表单</li>
<li>使用 submit / reset 按钮</li>
<li>便于浏览器保存表单</li>
<li>第三方库可以整体取值</li>
<li>第三方库可以进行表单验证</li>
</ul>
<h2 id="CSS精华（Cascading-Style-Sheet）层叠样式表"><a href="#CSS精华（Cascading-Style-Sheet）层叠样式表" class="headerlink" title="CSS精华（Cascading Style Sheet）层叠样式表"></a>CSS精华（Cascading Style Sheet）层叠样式表</h2><h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><ul>
<li>用于适配HTML元素</li>
<li>分类和权重</li>
<li>解析方式和性能</li>
<li>值得关注的选择器</li>
</ul>
<h3 id="选择器分类"><a href="#选择器分类" class="headerlink" title="选择器分类"></a>选择器分类</h3><ul>
<li>元素选择器 <code>a&#123;&#125;</code></li>
<li>伪元素选择器 <code>::before&#123;&#125;</code></li>
<li>类元素选择器 <code>.link&#123;&#125;</code></li>
<li>属性选择器 <code>[type=radio]&#123;&#125;</code></li>
<li>伪类选择器 <code>:hover&#123;&#125;</code></li>
<li>ID选择器 <code>#id&#123;&#125;</code></li>
<li>组合选择器 <code>[type=checkbox] + label&#123;&#125;</code></li>
<li>否定选择器 <code>:not(.link)&#123;&#125;</code></li>
<li>通用选择器 <code>*&#123;&#125;</code></li>
</ul>
<h3 id="选择器权重（1）"><a href="#选择器权重（1）" class="headerlink" title="选择器权重（1）"></a>选择器权重（1）</h3><ul>
<li>ID选择器 #id{}+100</li>
<li>类 属性 伪类 +10</li>
<li>元素 伪元素 +1</li>
<li>其它选择器 +0</li>
</ul>
<p>例子：计算一个不进位的数字</p>
<pre><code>CPP
#id.link a[href]
————————————————
计算过程：
#id +100
.link +10
a +1
[href] +0
结果:111
CPP
#id .link.active
————————————————
计算过程：
#id +100
.link +10
.active +10
结果:120
</code></pre>
<p>那么，我们怎么理解 <strong>不进位的数字</strong> 这关键字眼呢？用一个简单例子吧：</p>
<pre><code>CPP
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;CSS选择器&lt;/title&gt;
    &lt;style&gt;
        #test1&#123;
            color: red;
        &#125;
        #test1.test1&#123;
            color: blue;
        &#125;
        .test2&#123;
            color: red;
        &#125;
        div.test2&#123;
            color: blue;
        &#125;
        #test3&#123;
            color: red;
        &#125;
        .c1.c2.c3.c4.c5.c6.c7.c8.c9.c10.c11&#123;
            color: blue;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body class=&quot;body&quot; id=&quot;body&quot;&gt;
    &lt;div id=&quot;test1&quot; class=&quot;test1&quot;&gt;蓝色&lt;/div&gt;
    &lt;div class=&quot;test2&quot;&gt;蓝色&lt;/div&gt;
    &lt;div id=&quot;test3&quot; class=&quot;c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11&quot;&gt;红色&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>结果如下图所示：<br><a href="https://img-blog.csdnimg.cn/20200526201651903.png"><img src="https://img-blog.csdnimg.cn/20200526201651903.png" alt="img"></a><br>不妨发现，最后一个 <code>div</code>，尽管我们类选择器有11个，加起来有110，但是依旧没有 id 选择器优先级高，正是因为这个不进位的数字，简单说：<strong>你大爷还是你大爷！</strong></p>
<h3 id="选择器权重（2）"><a href="#选择器权重（2）" class="headerlink" title="选择器权重（2）"></a>选择器权重（2）</h3><ul>
<li>!important 优先级最高</li>
<li>元素属性 优先级高</li>
<li>相同权重 后写的生效</li>
</ul>
<p>举个栗子：</p>
<pre><code>CPP
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;CSS选择器&lt;/title&gt;
    &lt;style&gt;
        .test1&#123;
            color: red;
        &#125;
        .test1&#123;
            color: blue;
        &#125;
        .test2&#123;
            color: red!important;
        &#125;
        .test2&#123;
            color: blue;
        &#125;
        #test3&#123;
            color: red;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body class=&quot;body&quot; id=&quot;body&quot;&gt;
    &lt;div class=&quot;test1&quot;&gt;蓝色&lt;/div&gt;
    &lt;div class=&quot;test2&quot;&gt;红色&lt;/div&gt;
    &lt;div id=&quot;test3&quot; style=&quot;color: blue;&quot;&gt;蓝色&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>运行结果如下图所示：<br><a href="https://img-blog.csdnimg.cn/20200526202255146.png"><img src="https://img-blog.csdnimg.cn/20200526202255146.png" alt="img"></a></p>
<h3 id="非布局样式"><a href="#非布局样式" class="headerlink" title="非布局样式"></a>非布局样式</h3><h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><ul>
<li>字体族 例如: serif、monospace（不能添加引号）衬线字体<ul>
<li>多字体fallback 例如： “monaco”、”Microsoft Yahei”、”PingFang SC”</li>
<li>网络字体、自定义字体</li>
<li>iconfont</li>
</ul>
</li>
</ul>
<h4 id="行高（经典问题）"><a href="#行高（经典问题）" class="headerlink" title="行高（经典问题）"></a>行高（经典问题）</h4><ul>
<li>行高的构成（由line-box组成，line-box由inline-box组成）</li>
<li>行高相关的现象和方案（可以通过设置 line-height来实现垂直居中效果）</li>
<li>行高的调整</li>
</ul>
<p><strong>经典问题</strong>：图片下面有空隙，原理是什么？怎样去除？<br><a href="https://img-blog.csdnimg.cn/20200526210039103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200526210039103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>原理是因为图片按照 inline 进行排版，排版的时候会涉及到字体对齐，默认按照 <code>baseline</code> 对齐，<code>baseline</code>和底线之间是有偏差的，偏差大小是根据字体大小而定，如果是12px字体大小，则图片空隙就是3px左右。这就是经典图片3px空隙问题。</p>
<p><strong>解决方式</strong>：</p>
<ul>
<li><p>由于默认按照<code>baseline</code>对齐，不妨将 <code>vertical-align</code> 设为 <code>bottom</code>，按照底线对齐。</p>
</li>
<li><p>设置</p>
<pre><code>display:block
</code></pre>
<p>可以解决该问题，但是会独占一行，如下图所示：</p>
<p><img src="https://img-blog.csdnimg.cn/20200526210520421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></p>
<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4></li>
<li><p>背景颜色</p>
</li>
<li><p>渐变色背景</p>
</li>
<li><p>多背景叠加</p>
</li>
</ul>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;渐变色背景（线性梯度）&lt;/title&gt;
    &lt;style&gt;
        .div1&#123;
            height: 90px;
        &#125;
        .div2&#123;
            height: 90px;
            /*background: linear-gradient(to right,red,green);*/
            /*background: linear-gradient(180deg,red,green);*/
            /*background: linear-gradient(135deg,red 0,green 15%,yellow 50%,blue 90%);*/
            
            /*网格线*/
            background: linear-gradient(135deg,transparent 0,transparent 49.5%,green 49.5%,green 50.5%,transparent 50.5%,transparent 100%),
                        linear-gradient(45deg,transparent 0,transparent 49.5%,red 49.5%,red 50.5%,transparent 50.5%,transparent 100%);
            background-size: 30px 30px;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;div1&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;div2&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>最后一个例子展示效果：<br><a href="https://img-blog.csdnimg.cn/20200526220315152.png"><img src="https://img-blog.csdnimg.cn/20200526220315152.png" alt="img"></a></p>
<ul>
<li>背景图片和属性（雪碧图）</li>
</ul>
<pre><code>CPP
background-repeat: no-repeat;
background-size: 30px 30px; //相对于容器偏移
background-position: 30px 30px;
</code></pre>
<p><strong>雪碧图</strong> 就是将很多个图片进行拼接成一个图片，然后通过 <code>background-position</code>等属性进行偏移，在网页中得到对应图片，来达到减少http请求。</p>
<ul>
<li><p>base64和性能优化</p>
<p>将图片进行base64编码后，就是一个字符文本，缺点之一就是图片的体积会增大 <code>1/3</code> 左右，并且放入css文件中，也会导致css文件变大。另外，虽然能减少http请求，但增大了解码的开销。适用于小图标<code>icon</code>，例如<code>loading</code>文件等。最后，在开发环境一般不采用直接将图片进行 <code>base64</code> 编码，因为对于协同开发来说，无法知晓图片原样，只有一个文本。</p>
<p>一般情况下，是在生产环境下，通过打包的方式，将小图片进行 <code>base64</code>编码。</p>
</li>
<li><p>多分辨率适配</p>
</li>
</ul>
<h4 id="边框（经典问题）"><a href="#边框（经典问题）" class="headerlink" title="边框（经典问题）"></a>边框（经典问题）</h4><ul>
<li>边框的属性：线型 大小 颜色</li>
</ul>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;边框&lt;/title&gt;
    &lt;style&gt;
        .c1&#123;
            width: 400px;
            height: 200px;
            border: 1px solid red;
            /*border: 5px solid red;*/
            /*border: 5px dotted red;*/
            /*border: 5px dashed red;*/
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;c1&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<ul>
<li>边框背景图</li>
</ul>
<p><strong>经典问题</strong>：九宫格问题，例如下面图片，我们如果想要实现9个不同形式，然后中间放内容，如果用原本9个div方法，那么会非常麻烦，而css3提供了 <code>border</code>方式可以解决上述问题。<br><a href="https://img-blog.csdnimg.cn/20200526232959608.png"><img src="https://img-blog.csdnimg.cn/20200526232959608.png" alt="img"></a><br><a href="https://img-blog.csdnimg.cn/20200526233253297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200526233253297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>在没有在 <code>border-image</code>处设置 <code>round</code>之前，是如上效果，后面 30 是用来切出四个角。</p>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;边框&lt;/title&gt;
    &lt;style&gt;
        .c1&#123;
            width: 400px;
            height: 200px;
            border: 30px solid transparent;
            border-image: url(./xx.png) 30 round; /*round将图片进行整数个拼接*/
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;c1&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>在 <code>border-image</code>处设置 <code>round</code>之后，是如下效果，基本达到我们想要的效果。<br><a href="https://img-blog.csdnimg.cn/20200526232832159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200526232832159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;边框&lt;/title&gt;
    &lt;style&gt;
        .c2&#123;
            width: 400px;
            height: 200px;
            border: 30px solid transparent;
            border-image: url(./xx.png) 30 round; /*round将图片进行整数个拼接*/
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;c2&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<ul>
<li>边框衔接（三角形）</li>
</ul>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;边框&lt;/title&gt;
    &lt;style&gt;
        .c3&#123;
            width: 0px;
            height: 200px;
            border-bottom: 30px solid red;
            border-left: 30px solid transparent;
            border-right: 30px solid transparent;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;c3&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>实现三角形，效果如下：<br><a href="https://img-blog.csdnimg.cn/20200526233958910.png"><img src="https://img-blog.csdnimg.cn/20200526233958910.png" alt="img"></a></p>
<h4 id="滚动"><a href="#滚动" class="headerlink" title="滚动"></a>滚动</h4><p>产生滚动的原因：当内容比容器多的时候，即容器装不下内容的时候，就需要滚动。滚动主要包括如下几个方面：</p>
<ul>
<li>滚动行为和滚动条<br><a href="https://img-blog.csdnimg.cn/20200527100408454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200527100408454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br><code>overflow</code> 设置<code>auto</code> 和 <code>scroll</code> 区别，auto 是内容多于容器时显示滚动条，反正，不显示。而 scroll 是一直显示滚动条<br><a href="https://img-blog.csdnimg.cn/20200527100654576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200527100654576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></li>
</ul>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;滚动&lt;/title&gt;
    &lt;style&gt;
        .div1&#123;
            background: red;
            height: 200px;
            overflow: scroll;  /*可选值: hidden visible auto scroll*/
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;div1&quot;&gt;
        &lt;p&gt;test&lt;/p&gt;
        &lt;p&gt;test&lt;/p&gt;
        &lt;p&gt;test&lt;/p&gt;
        &lt;p&gt;test&lt;/p&gt;
        &lt;p&gt;test&lt;/p&gt;
        &lt;p&gt;test&lt;/p&gt;
        &lt;p&gt;test&lt;/p&gt;
        &lt;p&gt;test&lt;/p&gt;
        &lt;p&gt;test&lt;/p&gt;
        &lt;p&gt;test&lt;/p&gt;
        &lt;p&gt;test&lt;/p&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h4 id="文字折行（经典问题）"><a href="#文字折行（经典问题）" class="headerlink" title="文字折行（经典问题）"></a>文字折行（经典问题）</h4><ul>
<li>overflow-wrap（word-wrap）通用换行控制（是否保留单词）</li>
<li>word-break 针对多字节文字（中文句字也是单词）</li>
<li>white-space 空白处是否断行</li>
</ul>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;文字折行&lt;/title&gt;
    &lt;style&gt;
        .div1&#123;
            border: 1px solid;
            width: 8em;
            overflow-wrap: normal;
            word-break: normal;
            white-space: normal;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;div1&quot;&gt;
        学如逆水行舟，不进则退！Learning is like sailing against the current, retreating if not advancing
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>展示效果:<br><a href="https://img-blog.csdnimg.cn/20200527102807870.png"><img src="https://img-blog.csdnimg.cn/20200527102807870.png" alt="img"></a><br><strong>经典问题</strong>：怎么让一个很长的文本不换行？</p>
<p>将上述属性设置为 <code>nowrap</code>即可</p>
<pre><code>CPP
white-space: nowrap;
</code></pre>
<p><a href="https://img-blog.csdnimg.cn/20200527102716363.png"><img src="https://img-blog.csdnimg.cn/20200527102716363.png" alt="img"></a></p>
<h4 id="装饰性属性"><a href="#装饰性属性" class="headerlink" title="装饰性属性"></a>装饰性属性</h4><ul>
<li>字重（粗体）font-weight</li>
<li>斜体 font-style:itatic</li>
<li>下划线 text-decoration</li>
<li>指针 cursor</li>
</ul>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;font-weight&lt;/title&gt;
    &lt;style&gt;
        .div1&#123;
            font-weight: normal; /*400*/
            font-weight: bold;   /*700*/
            font-weight: bolder;
            font-weight: lighter;
            font-weight: 100;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;div1&quot;&gt;学如逆水行舟，不进则退！&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h3 id="CSS-Hack（了解）"><a href="#CSS-Hack（了解）" class="headerlink" title="CSS Hack（了解）"></a>CSS Hack（了解）</h3><h4 id="hack"><a href="#hack" class="headerlink" title="hack"></a>hack</h4><p><a href="https://img-blog.csdnimg.cn/20200527222702460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200527222702460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>用来<strong>处理浏览器兼容性</strong>做法，好处就是<strong>简单粗暴</strong>。</p>
<ul>
<li>Hack即不合法但生效的写法</li>
<li>主要用于区分不同浏览器</li>
<li>缺点：难理解 难维护 难失效</li>
<li>替代方案：特性检测（检测浏览器是否有相关特性，没有的话就针对性处理）</li>
<li>替代方案：针对性加class（例如检测到 <code>IE6</code>，那么就加<code>IE6</code>的class）</li>
</ul>
<h2 id="CSS-面试真题"><a href="#CSS-面试真题" class="headerlink" title="CSS 面试真题"></a>CSS 面试真题</h2><h3 id="css样式（选择器）的优先级"><a href="#css样式（选择器）的优先级" class="headerlink" title="css样式（选择器）的优先级"></a>css样式（选择器）的优先级</h3><ul>
<li>计算权重确定</li>
<li>!important</li>
<li>内联样式</li>
<li>后写的优先级高</li>
</ul>
<h3 id="雪碧图的作用"><a href="#雪碧图的作用" class="headerlink" title="雪碧图的作用"></a>雪碧图的作用</h3><ul>
<li><strong>雪碧图</strong> 就是将很多个图片进行拼接成一个图片，然后通过 <code>background-position</code>等属性进行偏移，在网页中得到对应图片，来达到减少http请求，提高页面加载性能。</li>
<li>有一些情况下可以减少图片大小（例如png格式图片，每张图片颜色基本上一样的，有可能总的图片大小是小于每个图片加起来的大小的）</li>
</ul>
<h3 id="自定义字体的使用场景"><a href="#自定义字体的使用场景" class="headerlink" title="自定义字体的使用场景"></a>自定义字体的使用场景</h3><ul>
<li>宣传 / 品牌 / banner 等固定文案</li>
<li>字体图标（将文字变为图标）</li>
</ul>
<h3 id="base64的作用"><a href="#base64的作用" class="headerlink" title="base64的作用"></a>base64的作用</h3><p>将图片进行base64编码后，就是一个字符文本，缺点之一就是图片的体积会增大 <code>1/3</code> 左右，并且放入css文件中，也会导致css文件变大。另外，虽然能减少http请求，但增大了解码的开销。适用于小图标<code>icon</code>，例如<code>loading</code>文件等。最后，在开发环境一般不采用直接将图片进行 <code>base64</code> 编码，因为对于协同开发来说，无法知晓图片原样，只有一个文本。</p>
<ul>
<li>用于减少http请求</li>
<li>适用于小图片</li>
<li>base64的体积约为原图的 4/3</li>
</ul>
<h3 id="伪类和伪元素的区别？"><a href="#伪类和伪元素的区别？" class="headerlink" title="伪类和伪元素的区别？"></a>伪类和伪元素的区别？</h3><ul>
<li>伪类 表 状态（某元素是个链接 link状态）</li>
<li>伪元素是真的有元素（<code>::before&#123;&#125;</code>，在页面中会显示内容）</li>
<li>前者使用单冒号，后者使用双冒号</li>
</ul>
<h3 id="如何美化checkbox"><a href="#如何美化checkbox" class="headerlink" title="如何美化checkbox"></a>如何美化checkbox</h3><ul>
<li>label [for] 和 id</li>
<li>隐藏原生 input（所有的样式由 <code>label</code> 来搞定）</li>
<li>:checked + label</li>
</ul>
<p><a href="https://img-blog.csdnimg.cn/20200527225852233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200527225852233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<h2 id="CSS-布局"><a href="#CSS-布局" class="headerlink" title="CSS 布局"></a>CSS 布局</h2><p>CSS体系知识的重中之重</p>
<ul>
<li>早期以 table 为主（简单）</li>
<li>后来以技巧性布局为主（难）</li>
<li>现在有 flexbox / grid（偏简单）</li>
</ul>
<h3 id="常用布局方式"><a href="#常用布局方式" class="headerlink" title="常用布局方式"></a>常用布局方式</h3><ul>
<li>table表格布局</li>
<li>float 浮动+ margin</li>
<li>inline-block 布局</li>
<li>flexbox 布局</li>
</ul>
<h3 id="布局方式（表格）"><a href="#布局方式（表格）" class="headerlink" title="布局方式（表格）"></a>布局方式（表格）</h3><pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;table布局&lt;/title&gt;
    &lt;style&gt;
        .table&#123;
            margin-top: 20px;
            width: 500px;
            height: 100px;
            display: table;
        &#125;
        .table-row&#123;
            display: table-row;
        &#125;
        .table-cell&#123;
            vertical-align: center;
            display: table-cell;
        &#125;
        .left&#123;
            background: red;
            vertical-align: middle;
        &#125;
        .right&#123;
            background: blue;
            vertical-align: middle;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;table&quot;&gt;
        &lt;div class=&quot;table-row&quot;&gt;
            &lt;div class=&quot;left table-cell&quot;&gt;left&lt;/div&gt;
            &lt;div class=&quot;right table-cell&quot;&gt;right&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>展示效果如下图所示：<br><a href="https://img-blog.csdnimg.cn/20200528115357438.png"><img src="https://img-blog.csdnimg.cn/20200528115357438.png" alt="img"></a></p>
<h3 id="display-position（经典问题）"><a href="#display-position（经典问题）" class="headerlink" title="display / position（经典问题）"></a>display / position（经典问题）</h3><ul>
<li>display 常用属性值： block（块级） / inline（内联） / inline-block（对内表现为block，可以有宽高，对外表现为inline，可以与其它元素排在同一行）</li>
<li>position 常用属性值：static（静态） / relative（相对） / absolute（绝对） / fixed（固定）</li>
</ul>
<p><strong>display</strong></p>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;display&lt;/title&gt;
    &lt;style&gt;
        .block&#123;
            height: 200px;
            background: red;
        &#125;
        .inline&#123;
            display: inline;
            background: green;
        &#125;
        .inline-block&#123;
            display: inline-block;
            width: 200px;
            height: 100px;
            background: blue;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;block&quot;&gt;
        block
    &lt;/div&gt;
    &lt;div class=&quot;inline&quot;&gt;inline&lt;/div&gt;
    &lt;div class=&quot;inline-block&quot;&gt;inline-block&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p><strong>position</strong></p>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;position&lt;/title&gt;
    &lt;style&gt;
        .p1&#123;
            width: 100px;
            height: 100px;
            background: red;
        &#125;
        .p2&#123;
            position: relative;
            width: 100px;
            height: 100px;
            left: 20px;
            top: -10px;
            background: blue;
        &#125;
        .p3&#123;
            position: absolute;
            width: 100px;
            height: 100px;
            left: 80px;
            top: 30px;
            background: yellow;
        &#125;
        .p4&#123;
            position: fixed;
            width: 100px;
            height: 100px;
            left: 0;
            bottom: 10px;
            background: green;
        &#125;
        .p5&#123;
            width: 100px;
            height: 100px;
            background: pink;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;p1&quot;&gt;position:static&lt;/div&gt;
    &lt;div class=&quot;p2&quot;&gt;position:relative&lt;/div&gt;
    &lt;div class=&quot;p3&quot;&gt;position:absloute&lt;/div&gt;
    &lt;div class=&quot;p4&quot;&gt;position:fixed&lt;/div&gt;
    &lt;div class=&quot;p5&quot;&gt;no position&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>展示效果如下：<br><a href="https://img-blog.csdnimg.cn/20200528164155927.png"><img src="https://img-blog.csdnimg.cn/20200528164155927.png" alt="img"></a><br>由上图可知，当设置 <code>position</code> 为 <code>relative</code> 后，no position（粉色块） 并没有在蓝色块下面，也就是说设置 <code>position</code> 为 <code>relative</code> 后，占据空间还是按照原来的方式计算的，不会因为偏移而改变布局的计算。</p>
<p><strong>经典问题</strong>：</p>
<ul>
<li>绝对定位 <code>absolute</code>，会优先查找父级定位为 <code>absolute</code> 或 <code>relative</code>的进行定位，如果父级没有，找上级，那么最终就会根据 <code>body</code>进行定位，它和 <code>fixed</code>一样，也是脱离了文档流。</li>
<li><code>fixed</code>相对于屏幕进行定位</li>
</ul>
<p><strong>层叠问题</strong> ，因为默认会根据先后顺序显示，因此会有覆盖情况，此时，可以通过设计 <code>z-index</code> 解决，权重越大，优先显示。</p>
<h3 id="flexbox（圣杯布局）"><a href="#flexbox（圣杯布局）" class="headerlink" title="flexbox（圣杯布局）"></a>flexbox（圣杯布局）</h3><ul>
<li>弹性盒子</li>
<li>盒子本来就是并列的</li>
<li>指定宽度即可</li>
<li>移动端常用</li>
</ul>
<p>（目前用的不是很热的原因是虽然简单方便，但是<strong>兼容性</strong>有点问题）</p>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;flexbox&lt;/title&gt;
    &lt;style&gt;
        .container&#123;
            width: 800px;
            height: 200px;
            display: flex;
            border: 1px solid black;
        &#125;
        .flex&#123;
            background: blue;
            flex: 1;
            margin: 5px;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container&quot;&gt;
        &lt;div class=&quot;flex&quot;&gt;flex&lt;/div&gt;
        &lt;div class=&quot;flex&quot;&gt;flex&lt;/div&gt;
        &lt;div class=&quot;flex&quot;&gt;flex&lt;/div&gt;
        &lt;div class=&quot;flex&quot;&gt;flex&lt;/div&gt;
        &lt;div class=&quot;flex&quot;&gt;flex&lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>展示效果如下：<br><a href="https://img-blog.csdnimg.cn/20200528170053892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528170053892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<p>由这个很方便的布局，我们可以写一个<strong>圣杯布局</strong>的例子（即左右固定，中间自适应）：</p>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;圣杯布局-flexbox&lt;/title&gt;
    &lt;style&gt;
        *&#123;
            margin: 0;
        &#125;
        .container&#123;
            min-height: 200px;
            display: flex;
        &#125;
        .left&#123;
            width: 200px;
            display: flex;
            background: red;
        &#125;
        .center&#123;
            background: yellow;
            flex: 1;
        &#125;
        .right&#123;
            width: 200px;
            display: flex;
            background: blue;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container&quot;&gt;
        &lt;div class=&quot;left&quot;&gt;left&lt;/div&gt;
        &lt;div class=&quot;center&quot;&gt;center&lt;/div&gt;
        &lt;div class=&quot;right&quot;&gt;right&lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p><a href="https://img-blog.csdnimg.cn/202005281708036.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/202005281708036.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<h3 id="float"><a href="#float" class="headerlink" title="float"></a>float</h3><ul>
<li>元素”浮动”</li>
<li>脱离文档流（不会对其它元素的布局造成影响）</li>
<li>但不脱离文本流</li>
</ul>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;float布局&lt;/title&gt;
    &lt;style&gt;
        .container&#123;
            width: 400px;
            background: red;
        &#125;
        .p1&#123;
            width: 200px;
            height: 80px;
            float: left;
            background: pink;
        &#125;

    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container&quot;&gt;
        &lt;span class=&quot;p1&quot;&gt;float元素&lt;/span&gt;
        &lt;div class=&quot;p2&quot;&gt;很多文字很多文字很多文字很多文字很多文字很多文字很多文字很多文字很多文字很多文字很多文字很多文字很多文字很多文字很多文字&lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>展示效果如下：<br><a href="https://img-blog.csdnimg.cn/202005281718026.png"><img src="https://img-blog.csdnimg.cn/202005281718026.png" alt="img"></a></p>
<h3 id="float-特性的影响（经典问题）"><a href="#float-特性的影响（经典问题）" class="headerlink" title="float 特性的影响（经典问题）"></a>float 特性的影响（经典问题）</h3><p><strong>float 特性对自己的影响</strong>：</p>
<ul>
<li>形成块（BFC，可以使得inline元素能够设置宽高，例如上文代码，原本span元素不能设置宽高的，但通过设置float布局，使得可以设置宽高）</li>
<li>位置尽量靠上</li>
<li>位置尽量靠左（右）（对于上述解释，是如果 <code>container</code>宽度够的话，就尽量靠上和靠左，如果不行的话，就往下排了）</li>
</ul>
<p>简单例子：<br><a href="https://img-blog.csdnimg.cn/20200528172259918.png"><img src="https://img-blog.csdnimg.cn/20200528172259918.png" alt="img"></a><br><a href="https://img-blog.csdnimg.cn/20200528172240259.png"><img src="https://img-blog.csdnimg.cn/20200528172240259.png" alt="img"></a><br><strong>float 特性对兄弟的影响</strong>：</p>
<ul>
<li>上面贴非 float 元素</li>
<li>旁边贴 float 元素</li>
<li>不影响其它块级元素位置（不脱离文档流）</li>
<li>影响其它块级元素内部文本（脱离了文本流）</li>
</ul>
<p><strong>float 特性对父级的影响</strong>：</p>
<ul>
<li>从布局上 “消失”（父级不会管它的宽高）</li>
<li><strong>经典问题</strong>：高度塌陷 （假设float元素，原本是 100px 高度，这个时候很期望父级能撑开100个像素，但因为设置了 float，等于消失了，并不会在意这 100个像素，因此，如果没有其它元素支撑高度的话，父级的高度就会设置为0，这就是高度塌陷）</li>
</ul>
<h3 id="清楚浮动的方式"><a href="#清楚浮动的方式" class="headerlink" title="清楚浮动的方式"></a>清楚浮动的方式</h3><p><strong>经典问题</strong>：</p>
<p>清除浮动的方式</p>
<p>① 当我们设置为 float 后，会将元素设为 BFC，接管自己的宽高，因此我们也可以让父级元素设置为 BFC，来接管自己的宽高。</p>
<p>初始状态：<br><a href="https://img-blog.csdnimg.cn/20200528174749689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528174749689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>在父级元素设置 <code>overflow: auto/hidden;</code></p>
<pre><code>CPP
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;清楚浮动&lt;/title&gt;
    &lt;style&gt;
        .container&#123;
            background: red;
            width: 400px;
            overflow: auto;
            margin: 10px;
        &#125;
        .p1&#123;
            background: pink;
            float: left;
            width: 200px;
            height: 50px;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container&quot;&gt;
        &lt;span&gt;xxxxxx&lt;/span&gt;
        &lt;span class=&quot;p1&quot;&gt;float&lt;/span&gt;
        &lt;span class=&quot;p1&quot;&gt;float&lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&quot;container&quot; style=&quot;height: 200px; background: blue;&quot;&gt;
        &lt;p&gt;第一行&lt;/p&gt;
        &lt;p&gt;第二行&lt;/p&gt;
        &lt;p&gt;第三行&lt;/p&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>最终状态效果图如下：<br><a href="https://img-blog.csdnimg.cn/20200528174958468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528174958468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></a></p>
<p>② 由于 float 不脱离文档流（不会影响其它元素布局），那么就可以使得元素刚好到达下面位置。就可以通过其它元素将父级撑起来，当父级刚好撑到下方位置时，就可以将浮动清除掉。</p>
<p><a href="https://img-blog.csdnimg.cn/20200528175222135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528175222135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<pre><code>CPP
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;清楚浮动&lt;/title&gt;
    &lt;style&gt;
        .container&#123;
            background: red;
            width: 400px;
        &#125;
        .p1&#123;
            background: pink;
            float: left;
            width: 200px;
            height: 50px;
        &#125;
        .removeFloat::after&#123;
            content: &#39;aaa&#39;;
            clear: both; /*保证当前元素左右没有浮动元素*/
            display: block;
            height: 0;
            visibility: hidden;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container removeFloat&quot;&gt;
        &lt;span&gt;xxxxxx&lt;/span&gt;
        &lt;span class=&quot;p1&quot;&gt;float&lt;/span&gt;
        &lt;span class=&quot;p1&quot;&gt;float&lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&quot;container&quot; style=&quot;height: 200px; background: blue;&quot;&gt;
        &lt;p&gt;第一行&lt;/p&gt;
        &lt;p&gt;第二行&lt;/p&gt;
        &lt;p&gt;第三行&lt;/p&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>经典清除浮动方式，效果图如下：<br><a href="https://img-blog.csdnimg.cn/20200528175659432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528175659432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<h3 id="float（圣杯布局）"><a href="#float（圣杯布局）" class="headerlink" title="float（圣杯布局）"></a>float（圣杯布局）</h3><pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;圣杯布局-float&lt;/title&gt;
    &lt;style&gt;
        .container&#123;
            min-height: 200px;
        &#125;
        .left&#123;
            float: left;
            background: red;
            width: 200px;
        &#125;
        .center&#123;
            margin-left: 200px;
            margin-right: 200px;
            background: yellow;
        &#125;
        .right&#123;
            float: right;
            background: blue;
            width: 200px;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container&quot;&gt;
        &lt;div class=&quot;left&quot;&gt;left&lt;/div&gt;
        &lt;div class=&quot;right&quot;&gt;right&lt;/div&gt;
        &lt;div class=&quot;center&quot;&gt;center&lt;/div&gt;
        
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>展示效果如下：<br><a href="https://img-blog.csdnimg.cn/20200528184805501.png"><img src="https://img-blog.csdnimg.cn/20200528184805501.png" alt="img"></a></p>
<h3 id="inline-block-布局"><a href="#inline-block-布局" class="headerlink" title="inline-block 布局"></a>inline-block 布局</h3><ul>
<li>像文本一样排block元素</li>
<li>没有清楚浮动等问题</li>
<li>需要处理间隙</li>
</ul>
<p>例如下图，红蓝之间有一个间隙，是因为 <code>inline-block</code>就像文本一样，我们没办法让两个字紧紧地挨着，于是我们就有了下文所述解决方式：<br><a href="https://img-blog.csdnimg.cn/20200528185802907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528185802907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;inline-block布局&lt;/title&gt;
    &lt;style&gt;
        .container&#123;
            width: 800px;
            height: 200px;
            font-size: 0;
        &#125;
        .left&#123;
            font-size: 15px;
            background: red;
            display: inline-block;
            width: 200px;
            height: 200px;
        &#125;
        .right&#123;
            font-size: 15px;
            background: blue;
            display: inline-block;
            width: 500px;
            height: 200px;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container&quot;&gt;
        &lt;div class=&quot;left&quot;&gt;left&lt;/div&gt;
        &lt;div class=&quot;right&quot;&gt;right&lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>展示效果如下：<br><a href="https://img-blog.csdnimg.cn/20200528185937166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528185937166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>查看上述代码，将父级元素字体大小设置为0即可解决间隙问题，但子元素需要设置自己的字体大小，不然就不会显示。</p>
<p>因此，做自适应方面会有点麻烦，不像上文 <code>float+margin</code> 那样简单</p>
<h3 id="响应式设计和布局"><a href="#响应式设计和布局" class="headerlink" title="响应式设计和布局"></a>响应式设计和布局</h3><ul>
<li>在不同的设备上正常使用</li>
<li>一般处理屏幕大小问题</li>
<li>主要方法：隐藏 + 折行 + 自适应空间（rem：通过html的字体大小（即 <code>font-size</code>）来确定元素大小，但不太精确 / viewport：通过 js或手工 确定整个界面放到多大 / media query：媒体查询，根据不同的设备来匹配不同的样式）</li>
</ul>
<p>下图含义就是只有在宽度小于 640px 时才会生效，即让移动端进行适配。<br><a href="https://img-blog.csdnimg.cn/20200528191524133.png"><img src="https://img-blog.csdnimg.cn/20200528191524133.png" alt="img"></a></p>
<h2 id="CSS-面试真题-1"><a href="#CSS-面试真题-1" class="headerlink" title="CSS 面试真题"></a>CSS 面试真题</h2><h3 id="实现两栏（三栏）布局的方法"><a href="#实现两栏（三栏）布局的方法" class="headerlink" title="实现两栏（三栏）布局的方法"></a>实现两栏（三栏）布局的方法</h3><ul>
<li>表格布局</li>
<li>float + margin 布局（兼容性好）</li>
<li>inline-block 布局（需要处理间隙问题）</li>
<li>flexbox布局（简单，但兼容性不是很好）</li>
</ul>
<h3 id="position-absolute-fixed-有什么区别？"><a href="#position-absolute-fixed-有什么区别？" class="headerlink" title="position:absolute / fixed 有什么区别？"></a>position:absolute / fixed 有什么区别？</h3><p><strong>经典问题</strong>：</p>
<ul>
<li>绝对定位 <code>absolute</code>，会优先查找父级定位为 <code>absolute</code> 或 <code>relative</code>的进行定位，如果父级没有，找上级，那么最终就会根据 <code>body</code>进行定位，它和 <code>fixed</code>一样，也是脱离了文档流。</li>
<li><code>fixed</code>相对于屏幕（viewport）进行定位</li>
</ul>
<p><strong>层叠问题</strong> ，因为默认会根据先后顺序显示，因此会有覆盖情况，此时，可以通过设计 <code>z-index</code> 解决，权重越大，优先显示。</p>
<h3 id="display-inline-block-的间隙"><a href="#display-inline-block-的间隙" class="headerlink" title="display:inline-block 的间隙"></a>display:inline-block 的间隙</h3><ul>
<li>原因：字符间距</li>
<li>解决：消灭字符（把标签写在一起或者添加注释）或者消灭间距（将<code>font-size</code>设为0）</li>
</ul>
<h3 id="如何清除浮动？为什么要清除浮动？"><a href="#如何清除浮动？为什么要清除浮动？" class="headerlink" title="如何清除浮动？为什么要清除浮动？"></a>如何清除浮动？为什么要清除浮动？</h3><p>原因：浮动的元素不会占据父元素的布局空间，也就是父级元素不会管浮动元素，有可能浮动元素会超出父元素，从而对其它元素产生影响。</p>
<p><strong>经典问题</strong>：</p>
<p>清除浮动的方式</p>
<p>① 当我们设置为 float 后，会将元素设为 BFC，接管自己的宽高，因此我们也可以让父级元素设置为 BFC，来接管自己的宽高。</p>
<p>初始状态：<br><a href="https://img-blog.csdnimg.cn/20200528174749689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528174749689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>在父级元素设置 <code>overflow: auto/hidden;</code></p>
<pre><code>CPP
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;清楚浮动&lt;/title&gt;
    &lt;style&gt;
        .container&#123;
            background: red;
            width: 400px;
            overflow: auto;
            margin: 10px;
        &#125;
        .p1&#123;
            background: pink;
            float: left;
            width: 200px;
            height: 50px;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container&quot;&gt;
        &lt;span&gt;xxxxxx&lt;/span&gt;
        &lt;span class=&quot;p1&quot;&gt;float&lt;/span&gt;
        &lt;span class=&quot;p1&quot;&gt;float&lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&quot;container&quot; style=&quot;height: 200px; background: blue;&quot;&gt;
        &lt;p&gt;第一行&lt;/p&gt;
        &lt;p&gt;第二行&lt;/p&gt;
        &lt;p&gt;第三行&lt;/p&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>最终状态效果图如下：<br><a href="https://img-blog.csdnimg.cn/20200528174958468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528174958468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></a></p>
<p>② 由于 float 不脱离文档流（不会影响其它元素布局），那么就可以使得元素刚好到达下面位置。就可以通过其它元素将父级撑起来，当父级刚好撑到下方位置时，就可以将浮动清除掉。</p>
<p><a href="https://img-blog.csdnimg.cn/20200528175222135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528175222135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<pre><code>CPP
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;清楚浮动&lt;/title&gt;
    &lt;style&gt;
        .container&#123;
            background: red;
            width: 400px;
        &#125;
        .p1&#123;
            background: pink;
            float: left;
            width: 200px;
            height: 50px;
        &#125;
        .removeFloat::after&#123;
            content: &#39;aaa&#39;;
            clear: both; /*保证当前元素左右没有浮动元素*/
            display: block;
            height: 0;
            visibility: hidden;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container removeFloat&quot;&gt;
        &lt;span&gt;xxxxxx&lt;/span&gt;
        &lt;span class=&quot;p1&quot;&gt;float&lt;/span&gt;
        &lt;span class=&quot;p1&quot;&gt;float&lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&quot;container&quot; style=&quot;height: 200px; background: blue;&quot;&gt;
        &lt;p&gt;第一行&lt;/p&gt;
        &lt;p&gt;第二行&lt;/p&gt;
        &lt;p&gt;第三行&lt;/p&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>经典清除浮动方式，效果图如下：<br><a href="https://img-blog.csdnimg.cn/20200528175659432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528175659432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<h3 id="如何适配移动端页面？"><a href="#如何适配移动端页面？" class="headerlink" title="如何适配移动端页面？"></a>如何适配移动端页面？</h3><p>主要方法：隐藏 + 折行 + 自适应空间（rem：通过html的字体大小（即 <code>font-size</code>）来确定元素大小，但不太精确 / viewport：通过 js或手工 确定整个界面放到多大 / media query：媒体查询，根据不同的设备来匹配不同的样式）</p>
<h2 id="效果属性（CSS最出彩的一部分）"><a href="#效果属性（CSS最出彩的一部分）" class="headerlink" title="效果属性（CSS最出彩的一部分）"></a>效果属性（CSS最出彩的一部分）</h2><h3 id="box-shadow"><a href="#box-shadow" class="headerlink" title="box-shadow"></a>box-shadow</h3><p><a href="https://img-blog.csdnimg.cn/20200528195555152.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528195555152.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>属性值介绍：前两个是偏移量，第三个是模糊区域度，第四个是拓展区域度，第五个是颜色（最后一个是透明度）</p>
<pre><code>CPP
box-shadow: 5px 5px 10px 0 rgba(0, 0, 0, .2);
</code></pre>
<h3 id="text-shadow"><a href="#text-shadow" class="headerlink" title="text-shadow"></a>text-shadow</h3><ul>
<li>立体感</li>
<li>印刷品质感</li>
</ul>
<h3 id="border-radius"><a href="#border-radius" class="headerlink" title="border-radius"></a>border-radius</h3><ul>
<li>圆角矩形</li>
<li>圆形</li>
<li>半圆 / 扇形</li>
<li>一些奇怪的角角</li>
</ul>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;border-radius&lt;/title&gt;
    &lt;style&gt;
        .container&#123;
            width: 100px;
            height: 100px;
            background: red;
            border-radius: 50%;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>展示效果如下：<br><a href="https://img-blog.csdnimg.cn/20200528204159194.png"><img src="https://img-blog.csdnimg.cn/20200528204159194.png" alt="img"></a></p>
<h3 id="background"><a href="#background" class="headerlink" title="background"></a>background</h3><ul>
<li><p>纹理、图案</p>
</li>
<li><p>渐变</p>
</li>
<li><p>雪碧图动画</p>
</li>
<li><p>背景图尺寸适应</p>
<p><img src="https://img-blog.csdnimg.cn/20200528204345120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></p>
<h3 id="clip-path"><a href="#clip-path" class="headerlink" title="clip-path"></a>clip-path</h3></li>
<li><p>对容器进行裁剪</p>
</li>
<li><p>常见几何图形</p>
</li>
<li><p>自定义路径</p>
</li>
</ul>
<p><a href="https://img-blog.csdnimg.cn/20200528213618716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200528213618716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<h3 id="3D-transform"><a href="#3D-transform" class="headerlink" title="3D-transform"></a>3D-transform</h3><pre><code>CPP
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;3D-transform&lt;/title&gt;
    &lt;style&gt;
        .container&#123;
            margin: 50px;
            padding: 10px;
            border: 1px solid red;
            width: 200px;
            height: 200px;
            position: relative;
            perspective: 500px;
        &#125;
        #cube&#123;
            width: 200px;
            height: 200px;
            transform-style: preserve-3d;
            transform: translateZ(-100px);
            transition: transform 1s;
        &#125;
        #cube:hover&#123;
            transform: translateZ(-100px) rotateX(90deg) rotateY(90deg);
        &#125;
        #cube div&#123;
            width: 200px;
            height: 200px;
            position: absolute;
            line-height: 200px;
            font-size: 50px;
            text-align: center;
        &#125;
        .front&#123;
            background: rgba(255, 0, 0, .3);
            transform: translateZ(100px);
        &#125;
        .back&#123;
            background: rgba(0, 255, 0, .3);
            transform: translateZ(-100px) rotateY(180deg);
        &#125;
        .left&#123;
            background: rgba(0, 0, 255, .3);
            transform: translateX(-100px) rotateY(-90deg);
        &#125;
        .right&#123;
            background: rgba(255, 255, 0, .3);
            transform: translateX(100px) rotateY(90deg);
        &#125;
        .top&#123;
            background: rgba(255, 0, 255, .3);
            transform: translateY(-100px) rotateX(-90deg);
        &#125;
        .bottom&#123;
            background: rgba(0, 255, 255, .3);
            transform: translateY(100px) rotateX(90deg);
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container&quot;&gt;
        &lt;div id=&quot;cube&quot;&gt;
            &lt;div class=&quot;front&quot;&gt;1&lt;/div&gt;
            &lt;div class=&quot;back&quot;&gt;2&lt;/div&gt;
            &lt;div class=&quot;right&quot;&gt;3&lt;/div&gt;
            &lt;div class=&quot;left&quot;&gt;4&lt;/div&gt;
            &lt;div class=&quot;top&quot;&gt;5&lt;/div&gt;
            &lt;div class=&quot;bottom&quot;&gt;6&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>展示效果图如下：<br><a href="https://img-blog.csdnimg.cn/20200529083411818.gif#pic_center"><img src="https://img-blog.csdnimg.cn/20200529083411818.gif#pic_center" alt="img"></a></p>
<h2 id="CSS-面试真题-2"><a href="#CSS-面试真题-2" class="headerlink" title="CSS 面试真题"></a>CSS 面试真题</h2><h3 id="如何用div画一个-xxx"><a href="#如何用div画一个-xxx" class="headerlink" title="如何用div画一个 xxx"></a>如何用div画一个 xxx</h3><ul>
<li>box-shadow 无限投影</li>
<li>::before</li>
<li>::after</li>
</ul>
<h3 id="如何产生不占空间的边框"><a href="#如何产生不占空间的边框" class="headerlink" title="如何产生不占空间的边框"></a>如何产生不占空间的边框</h3><ul>
<li>box-shadow</li>
<li>outline</li>
</ul>
<h3 id="如何实现圆形元素（头像）"><a href="#如何实现圆形元素（头像）" class="headerlink" title="如何实现圆形元素（头像）"></a>如何实现圆形元素（头像）</h3><ul>
<li>border-radius:50%</li>
</ul>
<h3 id="如何实现iOS图标的圆角"><a href="#如何实现iOS图标的圆角" class="headerlink" title="如何实现iOS图标的圆角"></a>如何实现iOS图标的圆角</h3><p><a href="https://img-blog.csdnimg.cn/20200529084619993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200529084619993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<ul>
<li>clip-path：(svg)</li>
</ul>
<h3 id="如何实现半圆、扇形等图形"><a href="#如何实现半圆、扇形等图形" class="headerlink" title="如何实现半圆、扇形等图形"></a>如何实现半圆、扇形等图形</h3><ul>
<li>border-radius 组合：有无边框、边框粗细、圆角半径</li>
</ul>
<h3 id="如何实现背景图居中显示-不重复-改变大小"><a href="#如何实现背景图居中显示-不重复-改变大小" class="headerlink" title="如何实现背景图居中显示 / 不重复 / 改变大小"></a>如何实现背景图居中显示 / 不重复 / 改变大小</h3><ul>
<li>background-position</li>
<li>background-repeat</li>
<li>background-size（cover / contain）</li>
</ul>
<h3 id="如何平移-放大一个元素"><a href="#如何平移-放大一个元素" class="headerlink" title="如何平移 / 放大一个元素"></a>如何平移 / 放大一个元素</h3><ul>
<li>transform:translateX(100px)</li>
<li>transform:scale(2)</li>
<li>transform本身与动画没有关系</li>
</ul>
<h3 id="如何实现3D效果"><a href="#如何实现3D效果" class="headerlink" title="如何实现3D效果"></a>如何实现3D效果</h3><ul>
<li>perspective:500px（指定透视角度）</li>
<li>transform-style:preserve-3d;（3d效果）</li>
<li>transform:translate rotate …</li>
</ul>
<h2 id="CSS-动画"><a href="#CSS-动画" class="headerlink" title="CSS 动画"></a>CSS 动画</h2><h3 id="动画的原理"><a href="#动画的原理" class="headerlink" title="动画的原理"></a>动画的原理</h3><ul>
<li>视觉暂留作用：就是说看到的画面，会在脑海中保留一段片段</li>
<li>画面逐渐变化</li>
</ul>
<h3 id="动画的作用"><a href="#动画的作用" class="headerlink" title="动画的作用"></a>动画的作用</h3><ul>
<li>愉悦感</li>
<li>引起注意</li>
<li>反馈（输入密码错误时，登录框晃动）</li>
<li>掩饰</li>
</ul>
<h3 id="CSS中动画的类型"><a href="#CSS中动画的类型" class="headerlink" title="CSS中动画的类型"></a>CSS中动画的类型</h3><ul>
<li>transition 补间动画（从一个状态到另一个状态，状态切换之间是有动画的）</li>
<li>keyframe 关键帧动画（指定的每一个状态就是一个关键帧）</li>
<li>逐帧动画（跳动）</li>
</ul>
<h3 id="transition-补间动画"><a href="#transition-补间动画" class="headerlink" title="transition 补间动画"></a>transition 补间动画</h3><pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;transition补间动画&lt;/title&gt;
    &lt;style&gt;
        .container&#123;
            width: 100px;
            height: 100px;
            background: red;
            transition: width 1s, background 2s;
        &#125;
        .container:hover&#123;
            width: 300px;
            background: blue;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>展示效果如下：<br><a href="https://img-blog.csdnimg.cn/20200529105730631.gif#pic_center"><img src="https://img-blog.csdnimg.cn/20200529105730631.gif#pic_center" alt="img"></a></p>
<h3 id="动画进度与时间的关系"><a href="#动画进度与时间的关系" class="headerlink" title="动画进度与时间的关系"></a>动画进度与时间的关系</h3><p><a href="https://img-blog.csdnimg.cn/20200529105848275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200529105848275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>例子：<br><a href="https://img-blog.csdnimg.cn/20200529110102399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200529110102399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br><a href="https://matthewlein.com/tools/ceaser">推荐：动画进度与时间关系模拟网站</a></p>
<h3 id="关键帧动画"><a href="#关键帧动画" class="headerlink" title="关键帧动画"></a>关键帧动画</h3><ul>
<li>相当于多个补间动画</li>
<li>与元素状态的变化无关</li>
<li>定义更加灵活</li>
</ul>
<pre><code>CODE
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;keyframe关键帧动画&lt;/title&gt;
    &lt;style&gt;
        .container&#123;
            width: 100px;
            height: 100px;
            background: red;
            animation: run 1s;
            animation-direction: reverse;
            animation-iteration-count: infinite;
            /*animation-fill-mode: forwards;*/
            /*animation-play-state: paused;*/
        &#125;
        @keyframes run &#123;
            0%&#123;
                width: 100px;
            &#125;
            100%&#123;
                width: 800px;
            &#125;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&quot;container&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>展示效果：</p>
<p><a href="https://img-blog.csdnimg.cn/20200529142723152.gif#pic_center"><img src="https://yangchaoyi.vip/img/loading.gif" alt="img"></a></p>
<h3 id="逐帧动画"><a href="#逐帧动画" class="headerlink" title="逐帧动画"></a>逐帧动画</h3><ul>
<li>属于关键帧动画特殊的一种</li>
<li>适用于无法补间计算的动画</li>
<li>资源较大</li>
<li>使用 steps() （设置关键帧之间有几个画面，一般设置为1,也可以说是将关键帧去掉补间）</li>
</ul>
<p>例如：一个动物跑动的过程，通过将每个动作的图片逐帧显示，形成动画的感觉。<br><a href="https://img-blog.csdnimg.cn/20200529143916273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200529143916273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<h2 id="CSS-面试真题-3"><a href="#CSS-面试真题-3" class="headerlink" title="CSS 面试真题"></a>CSS 面试真题</h2><h3 id="CSS-动画的实现方式有几种"><a href="#CSS-动画的实现方式有几种" class="headerlink" title="CSS 动画的实现方式有几种"></a>CSS 动画的实现方式有几种</h3><ul>
<li>transition</li>
<li>keyframes（animation）</li>
</ul>
<h3 id="过渡动画和关键帧动画的区别"><a href="#过渡动画和关键帧动画的区别" class="headerlink" title="过渡动画和关键帧动画的区别"></a>过渡动画和关键帧动画的区别</h3><ul>
<li>过渡动画需要有状态变化</li>
<li>关键帧动画不需要状态变化</li>
<li>关键帧动画能控制更精细</li>
</ul>
<h3 id="如何实现逐帧动画"><a href="#如何实现逐帧动画" class="headerlink" title="如何实现逐帧动画"></a>如何实现逐帧动画</h3><ul>
<li>使用关键帧动画</li>
<li>去掉补间（steps）</li>
</ul>
<h3 id="CSS动画的性能"><a href="#CSS动画的性能" class="headerlink" title="CSS动画的性能"></a>CSS动画的性能</h3><ul>
<li>性能不坏</li>
<li>部分情况下优于JS</li>
<li>但JS可以做的更好</li>
<li>部分高危属性（例如 <code>box-shadow</code>等）</li>
</ul>
<h2 id="CSS-预处理器"><a href="#CSS-预处理器" class="headerlink" title="CSS 预处理器"></a>CSS 预处理器</h2><ul>
<li>基于CSS的另一种语言</li>
<li>通过工具编译为CSS</li>
<li>添加了很多CSS不具备的特性</li>
<li>能提升CSS文件的组织</li>
</ul>
<p>常见的有 <code>less</code>（基于node写的，编译比较快，入门简单）和 <code>sass</code>（基于<code>Ruby</code>写的）</p>
<ul>
<li>嵌套 反映层级和约束</li>
<li>变量和计算 减少重重复代码</li>
<li>Extend 和 Mxxin 代码片段</li>
<li>循环 适用于复杂有规律的样式</li>
<li>import CSS 文件模块化</li>
</ul>
<h3 id="less嵌套"><a href="#less嵌套" class="headerlink" title="less嵌套"></a>less嵌套</h3><p>全局安装 <code>less</code></p>
<pre><code>CPP
npm install less -g
</code></pre>
<p><a href="https://img-blog.csdnimg.cn/20200529155848221.png"><img src="https://yangchaoyi.vip/img/loading.gif" alt="img"></a><br>创建一个 <code>test.less</code> 文件</p>
<pre><code>CPP
body&#123;
    padding: 0;
    margin: 0;
&#125;
.wrapper&#123;
    background: white;
    .nav&#123;
        font-size: 12px;
    &#125;
    .content&#123;
        font-size: 14px;
        &amp;:hover&#123;
            background: red;
        &#125;
    &#125;
&#125;
</code></pre>
<p>在该文件处调用终端，执行以下命令：</p>
<pre><code>CPP
lessc test.less
</code></pre>
<p>输出结果：</p>
<p><a href="https://img-blog.csdnimg.cn/20200529160202644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://yangchaoyi.vip/img/loading.gif" alt="img"></a></p>
<p>执行如下命令，输出到 <code>test.css</code> 文件中</p>
<pre><code>CSS
lessc test.less &gt; test.css
</code></pre>
<p>查看 <code>test.css</code> 文件，得到如下结果：</p>
<pre><code>CSS
body &#123;
  padding: 0;
  margin: 0;
&#125;
.wrapper &#123;
  background: white;
&#125;
.wrapper .nav &#123;
  font-size: 12px;
&#125;
.wrapper .content &#123;
  font-size: 14px;
&#125;
.wrapper .content:hover &#123;
  background: red;
&#125;
</code></pre>
<h3 id="sass嵌套"><a href="#sass嵌套" class="headerlink" title="sass嵌套"></a>sass嵌套</h3><p>全局安装 <code>sass</code></p>
<pre><code>CPP
cnpm install node-sass -g
</code></pre>
<p>创建一个 <code>test.scss</code> 文件</p>
<pre><code>CSS
body&#123;
    padding: 0;
    margin: 0;
&#125;
.wrapper&#123;
    background: white;
    .nav&#123;
        font-size: 12px;
    &#125;
    .content&#123;
        font-size: 14px;
        &amp;:hover&#123;
            background: red;
        &#125;
    &#125;
&#125;
</code></pre>
<p>执行如下命令，查看输出结果：</p>
<pre><code>CSS
node-sass test.scss
</code></pre>
<p><a href="https://img-blog.csdnimg.cn/20200529162015247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200529162015247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>执行如下命令，输出到 <code>test-scss.css</code> 文件中</p>
<pre><code>CSS
node-sass test.scss &gt; test-scss.css
</code></pre>
<p>查看 <code>test-scss.css</code> 文件，得到如下结果：</p>
<pre><code>CSS
body &#123;
  padding: 0;
  margin: 0; &#125;

.wrapper &#123;
  background: white; &#125;
  .wrapper .nav &#123;
    font-size: 12px; &#125;
  .wrapper .content &#123;
    font-size: 14px; &#125;
    .wrapper .content:hover &#123;
      background: red; &#125;
</code></pre>
<p>从以上代码来看，sass嵌套会保留原来嵌套样式，对于css观赏性来说，并不是我们特别想要的，于是我们可以执行如下命令，更改输出样式：</p>
<pre><code>CSS
node-sass --output-style expanded test.scss &gt; test-scss.css
</code></pre>
<p>输出结果就和less嵌套一样了，读者可以自己跑一遍！</p>
<h3 id="less变量"><a href="#less变量" class="headerlink" title="less变量"></a>less变量</h3><p>创建 <code>variable-less.less</code> 文件</p>
<pre><code>CSS
@fontSize: 12px;
@bgColor: red;

body&#123;
    padding: 0;
    margin: 0;
&#125;
.wrapper&#123;
    background: lighten(@bgColor,40%);
    .nav&#123;
        font-size: @fontSize;
    &#125;
    .content&#123;
        font-size: @fontSize+2px;
        &amp;:hover&#123;
            background: @bgColor;
        &#125;
    &#125;
&#125;
</code></pre>
<p>创建 <code>variable-less.css</code> 文件，执行如下命令：</p>
<pre><code>CSS
lessc variable-less.less &gt; variable-less.css
</code></pre>
<p>可以得到如下代码：</p>
<pre><code>CSS
body &#123;
  padding: 0;
  margin: 0;
&#125;
.wrapper &#123;
  background: #ffcccc;
&#125;
.wrapper .nav &#123;
  font-size: 12px;
&#125;
.wrapper .content &#123;
  font-size: 14px;
&#125;
.wrapper .content:hover &#123;
  background: red;
&#125;
</code></pre>
<h3 id="sass变量"><a href="#sass变量" class="headerlink" title="sass变量"></a>sass变量</h3><p>类似less变量，只需要将 <code>@</code> 改为 <code>$</code> 即可，因为 <code>less</code> 变量命名这样做，是更贴近CSS。而 <code>sass</code>是为了区别CSS。</p>
<h3 id="less-mixin"><a href="#less-mixin" class="headerlink" title="less mixin"></a>less mixin</h3><p>创建 <code>mixin.less</code> 文件，复制如下代码：</p>
<pre><code>CSS
@fontSize: 12px;
@bgColor: red;

.block(@fontSize)&#123;
    font-size: @fontSize;
    border: 1px solid #ccc;
    border-radius: 4px;
&#125;
body&#123;
    padding: 0;
    margin: 0;
&#125;
.wrapper&#123;
    background: lighten(@bgColor,40%);
    .nav&#123;
        .block(@fontSize);
    &#125;
    .content&#123;
        .block(@fontSize+2px);
        &amp;:hover&#123;
            background: @bgColor;
        &#125;
    &#125;
&#125;
</code></pre>
<p>创建 <code>mixin-less.css</code> 文件，执行如下代码：</p>
<pre><code>CSS
lessc mixin.less &gt; mixin-less.css
</code></pre>
<p>查看<code>mixin-less.css</code> 文件，发现 <code>.block</code> 没有了，在CSS内部就完成了样式复用。</p>
<pre><code>CSS
body &#123;
  padding: 0;
  margin: 0;
&#125;
.wrapper &#123;
  background: #ffcccc;
&#125;
.wrapper .nav &#123;
  font-size: 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
&#125;
.wrapper .content &#123;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 4px;
&#125;
.wrapper .content:hover &#123;
  background: red;
&#125;
</code></pre>
<h3 id="sass-mixin"><a href="#sass-mixin" class="headerlink" title="sass mixin"></a>sass mixin</h3><p>创建 <code>mixin.scss</code> 文件，复制如下代码：</p>
<pre><code>CSS
$fontSize: 12px;
$bgColor: red;

@mixin block($fontSize)&#123;
    font-size: $fontSize;
    border: 1px solid #ccc;
    border-radius: 4px;
&#125;
body&#123;
    padding: 0;
    margin: 0;
&#125;
.wrapper&#123;
    background: lighten($bgColor,40%);
    .nav&#123;
        @include block($fontSize);
    &#125;
    .content&#123;
        @include block($fontSize+2px);
        &amp;:hover&#123;
            background: $bgColor;
        &#125;
    &#125;
&#125;
</code></pre>
<p>创建 <code>mixin-sass.css</code> 文件，执行如下代码：</p>
<pre><code>CSS
node-sass --output-style expanded mixin.scss &gt; mixin-sass.css
</code></pre>
<p>查看<code>mixin-sass.css</code> 文件，发现 <code>.block</code> 没有了，在CSS内部就完成了样式复用。</p>
<pre><code>CSS
body &#123;
  padding: 0;
  margin: 0;
&#125;

.wrapper &#123;
  background: #ffcccc;
&#125;

.wrapper .nav &#123;
  font-size: 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
&#125;

.wrapper .content &#123;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 4px;
&#125;

.wrapper .content:hover &#123;
  background: red;
&#125;
</code></pre>
<p>总结：从上文对比来看，sass mixin 除了调用变量符号要换为 <code>$</code> 外，抽离公共样式需要使用 <code>@mixin</code> ，此外，调用时还需要使用 <code>@include</code> 。</p>
<p>那么，mixin还能做什么呢？</p>
<p>例如，对于布局方面，我们在上文提到了清楚浮动的方式，那么，我们就可以将这段样式进行复用，只需要在需要的元素处引用即可。</p>
<h3 id="less-extend"><a href="#less-extend" class="headerlink" title="less extend"></a>less extend</h3><p>上文提到过的，使用过 less mixin 抽离之后，我们可以得到如下代码，但是呢，又会有一个小问题，就是我们会有重复样式代码。在生产环境下，就会有大量这样的形式出现，这就会影响到我们的CSS体积了。<br><a href="https://img-blog.csdnimg.cn/2020052917481580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://yangchaoyi.vip/img/loading.gif" alt="img"></a><br>一种比较好的方式，如下，我们再讲公共样式代码进行抽离，这显然会降低我们的CSS体积。<br><a href="https://img-blog.csdnimg.cn/20200529174929659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://yangchaoyi.vip/img/loading.gif" alt="img"></a></p>
<p>因此，extend就发挥了它的作用</p>
<p>创建 <code>extend-less.less</code> 文件，复制如下代码：</p>
<pre><code>CSS
@fontSize: 12px;
@bgColor: red;

.block&#123;
    font-size: @fontSize;
    border: 1px solid #ccc;
    border-radius: 4px;
&#125;
body&#123;
    padding: 0;
    margin: 0;
&#125;
.wrapper&#123;
    background: lighten(@bgColor,40%);
    .nav&#123;
        &amp;:extend(.block);
    &#125;
    .content:extend(.block)&#123;
        &amp;:hover&#123;
            background: @bgColor;
        &#125;
    &#125;
&#125;
</code></pre>
<p>创建 <code>extend-less.css</code> 文件，执行如下代码：</p>
<pre><code>CSS
lessc extend-less.less &gt; extend-less.css
</code></pre>
<p>查看 <code>extend-less.css</code> 文件，发现代码体积相对减少了。</p>
<pre><code>CSS
.block,
.wrapper .nav,
.wrapper .content &#123;
  font-size: 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
&#125;
body &#123;
  padding: 0;
  margin: 0;
&#125;
.wrapper &#123;
  background: #ffcccc;
&#125;
.wrapper .content:hover &#123;
  background: red;
&#125;
</code></pre>
<p>总结：mixin 和 extend 区别， mixin 能处理一些复杂逻辑，比如添加变量，但会导致体积增大问题。而 extend的话，是将选择器提取出来，更加简单，不适合处理复杂逻辑，能将体积进行一定减少。</p>
<h3 id="sass-extend"><a href="#sass-extend" class="headerlink" title="sass extend"></a>sass extend</h3><p>创建 <code>extend-sass.scss</code> 文件，复制如下代码：</p>
<pre><code>CSS
$fontSize: 12px;
$bgColor: red;

.block&#123;
    font-size: $fontSize;
    border: 1px solid #ccc;
    border-radius: 4px;
&#125;
body&#123;
    padding: 0;
    margin: 0;
&#125;
.wrapper&#123;
    background: lighten($bgColor,40%);
    .nav&#123;
        @extend .block;
    &#125;
    .content&#123;
        @extend .block;
        &amp;:hover&#123;
            background: $bgColor;
        &#125;
    &#125;
&#125;
</code></pre>
<p>创建 <code>extend-sass.css</code> 文件，执行如下代码：</p>
<pre><code>CSS
node-sass --output-style expanded extend-sass.scss &gt; extend-sass.css
</code></pre>
<p>查看 <code>extend-sass.css</code> 文件，发现代码体积相对减少了。</p>
<pre><code>CSS
.block, .wrapper .nav, .wrapper .content &#123;
  font-size: 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
&#125;

body &#123;
  padding: 0;
  margin: 0;
&#125;

.wrapper &#123;
  background: #ffcccc;
&#125;

.wrapper .content:hover &#123;
  background: red;
&#125;
</code></pre>
<h3 id="less-loop"><a href="#less-loop" class="headerlink" title="less loop"></a>less loop</h3><p>创建 <code>loop-less.less</code> 文件，复制如下代码</p>
<pre><code>CSS
.gen-col(@n) when (@n &gt; 0)&#123;
    .gen-col(@n - 1);
    .col-@&#123;n&#125;&#123;
        width: 1000px/12*@n;
    &#125;
&#125;

.gen-col(12);
</code></pre>
<p>创建 <code>loop-less.css</code> 文件，执行如下代码：</p>
<pre><code>CSS
lessc loop-less.less &gt; loop-less.css
</code></pre>
<p>查看 <code>loop-less.css</code> 文件，发现有12个样式</p>
<pre><code>CSS
.col-1 &#123;
  width: 83.33333333px;
&#125;
.col-2 &#123;
  width: 166.66666667px;
&#125;
.col-3 &#123;
  width: 250px;
&#125;
.col-4 &#123;
  width: 333.33333333px;
&#125;
.col-5 &#123;
  width: 416.66666667px;
&#125;
.col-6 &#123;
  width: 500px;
&#125;
.col-7 &#123;
  width: 583.33333333px;
&#125;
.col-8 &#123;
  width: 666.66666667px;
&#125;
.col-9 &#123;
  width: 750px;
&#125;
.col-10 &#123;
  width: 833.33333333px;
&#125;
.col-11 &#123;
  width: 916.66666667px;
&#125;
.col-12 &#123;
  width: 1000px;
&#125;
</code></pre>
<h3 id="sass-loop"><a href="#sass-loop" class="headerlink" title="sass loop"></a>sass loop</h3><p>创建 <code>loop-sass.scss</code> 文件，复制如下代码：</p>
<pre><code>CSS
@mixin gen-col($n)&#123;
    @if $n &gt; 0 &#123;
        @include gen-col($n - 1);
        .col-#&#123;$n&#125;&#123;
            width: 1000px/12*$n;
        &#125;
    &#125;
&#125;

@include gen-col(12);
</code></pre>
<p>创建 <code>loop-sass.css</code>，执行如下代码：</p>
<pre><code>CSS
node-sass --output-style expanded loop-sass.scss &gt; loop-sass.css
</code></pre>
<p>查看 <code>loop-sass.css</code> 文件，发现有12个样式</p>
<pre><code>CSS
.col-1 &#123;
  width: 83.33333px;
&#125;

.col-2 &#123;
  width: 166.66667px;
&#125;

.col-3 &#123;
  width: 250px;
&#125;

.col-4 &#123;
  width: 333.33333px;
&#125;

.col-5 &#123;
  width: 416.66667px;
&#125;

.col-6 &#123;
  width: 500px;
&#125;

.col-7 &#123;
  width: 583.33333px;
&#125;

.col-8 &#123;
  width: 666.66667px;
&#125;

.col-9 &#123;
  width: 750px;
&#125;

.col-10 &#123;
  width: 833.33333px;
&#125;

.col-11 &#123;
  width: 916.66667px;
&#125;

.col-12 &#123;
  width: 1000px;
&#125;
</code></pre>
<p>上述版本代码或许是挺复杂的，好在 <code>sass</code>提供了for循环，见如下代码：</p>
<pre><code>CSS
@for $i from 1 through 12 &#123;
    .col-#&#123;$i&#125; &#123;
        width: 1000px/12*$i;
    &#125;
&#125;
</code></pre>
<h3 id="less-import"><a href="#less-import" class="headerlink" title="less import"></a>less import</h3><p>创建 <code>import-less.less</code> 文件，复制如下代码：</p>
<pre><code>CSS
@import &quot;./mixin&quot;;
@import &quot;./variable-less&quot;;
</code></pre>
<p>创建 <code>import-less.css</code> 文件，执行如下代码：</p>
<pre><code>CSS
lessc import-less.less &gt; import-less.css
</code></pre>
<p>查看 <code>import-less.less</code> 文件</p>
<pre><code>CSS
body &#123;
  padding: 0;
  margin: 0;
&#125;
.wrapper &#123;
  background: #ffcccc;
&#125;
.wrapper .nav &#123;
  font-size: 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
&#125;
.wrapper .content &#123;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 4px;
&#125;
.wrapper .content:hover &#123;
  background: red;
&#125;
body &#123;
  padding: 0;
  margin: 0;
&#125;
.wrapper &#123;
  background: #ffcccc;
&#125;
.wrapper .nav &#123;
  font-size: 12px;
&#125;
.wrapper .content &#123;
  font-size: 14px;
&#125;
.wrapper .content:hover &#123;
  background: red;
&#125;
</code></pre>
<h3 id="sass-import"><a href="#sass-import" class="headerlink" title="sass import"></a>sass import</h3><p>语法上没有什么变化，注意符号是 <code>$</code></p>
<h3 id="CSS预处理器框架"><a href="#CSS预处理器框架" class="headerlink" title="CSS预处理器框架"></a>CSS预处理器框架</h3><ul>
<li>Less - Lesshat / EST（<a href="http://ecomfe.github.io/est/">官网</a>）</li>
<li>SASS - Compass （<a href="http://compass-style.org/">官网</a>，将有兼容性问题的属性会进行封装成mixin，直接调用就好）</li>
<li>提供现成的 mixin</li>
<li>类似 JS 类库 封装常用功能</li>
</ul>
<h2 id="CSS-面试真题-4"><a href="#CSS-面试真题-4" class="headerlink" title="CSS 面试真题"></a>CSS 面试真题</h2><h3 id="常见的CSS预处理器"><a href="#常见的CSS预处理器" class="headerlink" title="常见的CSS预处理器"></a>常见的CSS预处理器</h3><ul>
<li>Less（Node.js）</li>
<li>Sass（Ruby 有Node版本）</li>
</ul>
<h3 id="预处理器的作用"><a href="#预处理器的作用" class="headerlink" title="预处理器的作用"></a>预处理器的作用</h3><ul>
<li>帮助更好地组织CSS代码</li>
<li>提高代码复用率</li>
<li>提升可维护性</li>
</ul>
<h3 id="预处理器的能力"><a href="#预处理器的能力" class="headerlink" title="预处理器的能力"></a>预处理器的能力</h3><ul>
<li>嵌套 反映层级和约束</li>
<li>变量和计算 减少重重复代码</li>
<li>Extend 和 Mxxin 代码片段</li>
<li>循环 适用于复杂有规律的样式（网格系统）</li>
<li>import CSS 文件模块化（按需拆解CSS文件）</li>
</ul>
<h3 id="预处理器的优缺点"><a href="#预处理器的优缺点" class="headerlink" title="预处理器的优缺点"></a>预处理器的优缺点</h3><ul>
<li>优点：提高代码复用率和可维护性</li>
<li>缺点：需要引入编译过程 有学习成本</li>
</ul>
<h2 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h2><ul>
<li>一个CSS框架</li>
<li>twitter 出品</li>
<li>提供通用基础样式</li>
</ul>
<h3 id="Bootstrap-4"><a href="#Bootstrap-4" class="headerlink" title="Bootstrap 4"></a>Bootstrap 4</h3><ul>
<li>兼容IE10+</li>
<li>使用flexbox布局</li>
<li>抛弃Nomalize.css</li>
<li>提供布局 和 reboot版本</li>
<li>（<a href="https://getbootstrap.com/">官网</a>，用sass写）</li>
<li>可用于后台管理系统</li>
</ul>
<h3 id="Bootstrap-JS组件"><a href="#Bootstrap-JS组件" class="headerlink" title="Bootstrap JS组件"></a>Bootstrap JS组件</h3><p>用于组件交互</p>
<ul>
<li>dropdown（下拉）</li>
<li>modal（弹窗）</li>
<li>…</li>
</ul>
<p>基于jquery写的，同时，依赖第三方库 Popper.js和 bootstrap.js</p>
<p><a href="https://img-blog.csdnimg.cn/20200530081512499.png"><img src="https://img-blog.csdnimg.cn/20200530081512499.png" alt="img"></a></p>
<p>如上图，第二个js文件包含了 Popper.js</p>
<p>使用方式：</p>
<ul>
<li>基于 data-*属性</li>
<li>基于 JS API</li>
</ul>
<h3 id="Bootstrap-响应式布局"><a href="#Bootstrap-响应式布局" class="headerlink" title="Bootstrap 响应式布局"></a>Bootstrap 响应式布局</h3><p>非常精华的部分</p>
<p><a href="https://img-blog.csdnimg.cn/20200530082022915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200530082022915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<h3 id="Bootstrap-定制方法"><a href="#Bootstrap-定制方法" class="headerlink" title="Bootstrap 定制方法"></a>Bootstrap 定制方法</h3><ul>
<li>使用CSS同名类覆盖（操作简单但）</li>
<li>修改sass源码重新构建</li>
<li>引用scss源文件 修改变量（推荐使用，干净）</li>
</ul>
<h2 id="CSS-面试真题-5"><a href="#CSS-面试真题-5" class="headerlink" title="CSS 面试真题"></a>CSS 面试真题</h2><h3 id="Bootstrap的优缺点"><a href="#Bootstrap的优缺点" class="headerlink" title="Bootstrap的优缺点"></a>Bootstrap的优缺点</h3><ul>
<li>优点：CSS代码结构合理，现成的样式可以直接使用</li>
<li>缺点：定制较为繁琐 体积大</li>
</ul>
<h3 id="Bootstrap如何实现响应式布局"><a href="#Bootstrap如何实现响应式布局" class="headerlink" title="Bootstrap如何实现响应式布局"></a>Bootstrap如何实现响应式布局</h3><ul>
<li>原理：通过 media query 设置不同分辨率的class</li>
<li>使用：为不同分辨率选择不同的网格class</li>
</ul>
<h3 id="如何基于Bootstrap-定制自己的样式"><a href="#如何基于Bootstrap-定制自己的样式" class="headerlink" title="如何基于Bootstrap 定制自己的样式"></a>如何基于Bootstrap 定制自己的样式</h3><ul>
<li>使用CSS同名类覆盖（操作简单但）</li>
<li>修改sass源码重新构建（需要了解Bootstrap 结构）</li>
<li>引用scss源文件 修改变量（按需使用，控制体积，推荐使用，干净，但需要了解结构）</li>
</ul>
<h2 id="CSS-工程化"><a href="#CSS-工程化" class="headerlink" title="CSS 工程化"></a>CSS 工程化</h2><p>关注几个事情：组织、优化、构建、维护</p>
<h3 id="PostCSS"><a href="#PostCSS" class="headerlink" title="PostCSS"></a>PostCSS</h3><ul>
<li>将 CSS 解析成 CSS，和预处理器没太多区别。</li>
<li>本身只有解析能力</li>
<li>各种神奇的特性全靠插件</li>
<li>目前至少有200多个插件</li>
</ul>
<p>常见：</p>
<ul>
<li>import 模块合并</li>
<li>autoprefixer 自动加前缀</li>
<li>cssnano 压缩代码</li>
<li>cssnext 使用CSS新特性</li>
<li>precss 变量、mixin、循环等</li>
</ul>
<p><a href="https://img-blog.csdnimg.cn/2020053009080083.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/2020053009080083.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<h3 id="PostCSS插件的使用"><a href="#PostCSS插件的使用" class="headerlink" title="PostCSS插件的使用"></a>PostCSS插件的使用</h3><p>全局安装 <code>postcss-cli</code></p>
<pre><code>CSS
npm install postcss-cli -g
</code></pre>
<p>在 <code>postcss.config.js</code> 文件进行配置<br><a href="https://img-blog.csdnimg.cn/2020053009210982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/2020053009210982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<h3 id="cssnext"><a href="#cssnext" class="headerlink" title="cssnext"></a>cssnext</h3><p><a href="https://img-blog.csdnimg.cn/20200530092327268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200530092327268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<h3 id="precss"><a href="#precss" class="headerlink" title="precss"></a>precss</h3><ul>
<li>变量（使用和 sass 几乎一样）</li>
<li>条件（if）</li>
<li>循环</li>
<li>Mixin Extend</li>
<li>import</li>
<li>属性值引用</li>
</ul>
<h3 id="gulp-postcss"><a href="#gulp-postcss" class="headerlink" title="gulp-postcss"></a>gulp-postcss</h3><p>PostCSS 支持的构建工具</p>
<ul>
<li>CLI命令行工具</li>
<li>webpack postcss-loader</li>
<li>Gulp gulp-postcss</li>
<li>Grunt grunt-postcss</li>
<li>Rollup rollup-postcss</li>
<li>…</li>
</ul>
<p><a href="https://img-blog.csdnimg.cn/20200530093431237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200530093431237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<h3 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h3><p><a href="https://img-blog.csdnimg.cn/20200530094124374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200530094124374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p>
<ul>
<li>JS是整个应用的核心入口</li>
<li>一切资源均由JS管理依赖</li>
<li>一切资源均由webpack打包</li>
</ul>
<h3 id="webpack-和-CSS"><a href="#webpack-和-CSS" class="headerlink" title="webpack 和 CSS"></a>webpack 和 CSS</h3><ul>
<li>css-loader 将 CSS变为 JS</li>
<li>style-loader 将JS插入到head</li>
<li>ExtractTextPlugin 将 CSS 从 JS 中 提取出来</li>
<li>CSS modules 解决 CSS命名冲突的问题</li>
<li>less-loader sass-loader 各类预处理器</li>
<li>postcss-loader PostCSS处理</li>
</ul>
<h2 id="CSS-面试真题-6"><a href="#CSS-面试真题-6" class="headerlink" title="CSS 面试真题"></a>CSS 面试真题</h2><h3 id="如何解决CSS模块化问题"><a href="#如何解决CSS模块化问题" class="headerlink" title="如何解决CSS模块化问题"></a>如何解决CSS模块化问题</h3><ul>
<li>less sass 等CSS预处理器</li>
<li>PostCSS插件（postcss-import / precss等）</li>
<li>webpackl处理CSS（css-loader + style-loader）</li>
</ul>
<h3 id="PostCSS可以做什么？"><a href="#PostCSS可以做什么？" class="headerlink" title="PostCSS可以做什么？"></a>PostCSS可以做什么？</h3><ul>
<li>取决于插件做什么</li>
<li>autoprefixer cssnext precss等 兼容性处理</li>
<li>import 模块合并</li>
<li>css语法检查 兼容性检查</li>
<li>cssnano 压缩文件</li>
</ul>
<h3 id="CSS-modules是做什么的，如何使用"><a href="#CSS-modules是做什么的，如何使用" class="headerlink" title="CSS modules是做什么的，如何使用"></a>CSS modules是做什么的，如何使用</h3><ul>
<li>解决类名冲突的问题</li>
<li>使用PostCSS或者webpack等构建工具进行编译</li>
<li>在HTML模板中使用编译过程产生的类名</li>
</ul>
<h3 id="为什么使用JS来引用、加载CSS"><a href="#为什么使用JS来引用、加载CSS" class="headerlink" title="为什么使用JS来引用、加载CSS"></a>为什么使用JS来引用、加载CSS</h3><ul>
<li>JS作为入口，管理资源有天然优势</li>
<li>将组件的结构、样式、行为封装到一起，增强内聚</li>
<li>可以做更多处理（webpack）</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>前端加油站</tag>
      </tags>
  </entry>
  <entry>
    <title>最快速地搭建炫丽的个人网站or博客</title>
    <url>/feng-pan-fp/myblog.git/2021/04/19/hello-world/</url>
    <content><![CDATA[<pre><code>为什么希望你们都有个人网站呢，好处真的太多了，说句最实在的，你的个人网站也可以在你面试公司的时候加分，何乐而不为。
</code></pre>
<h1 id="网站搭建"><a href="#网站搭建" class="headerlink" title="网站搭建"></a>网站搭建</h1><h2 id="视频教程地址：B站视频地址"><a href="#视频教程地址：B站视频地址" class="headerlink" title="视频教程地址：B站视频地址"></a>视频教程地址：<a href="https://www.bilibili.com/video/BV1je41147Ma/">B站视频地址</a></h2><h2 id="1-nodejs，Git环境搭建："><a href="#1-nodejs，Git环境搭建：" class="headerlink" title="1.nodejs，Git环境搭建："></a>1.nodejs，Git环境搭建：</h2><ul>
<li><p><a href="https://blog.csdn.net/qq_43285335/article/details/90696126">nodejs搭建教程:</a></p>
</li>
<li><p>注意了，像Git这种服务器在国外的东西，它的官网下载这个软件会非常慢，建议直接在百度上搜索git下载与安装，各种软件园都能直接快速下载，留一下版本最好不要太旧就行。</p>
</li>
<li><p><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">git搭建教程：</a></p>
</li>
<li><p><a href="https://jingyan.baidu.com/article/e8cdb32b0ce12137042bad51.html">补充参考文档（可能你会用到）：</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/luyuandatabase/p/12145707.html">配置淘宝云</a></p>
<h2 id="2-注册GitHub账号并创建仓库"><a href="#2-注册GitHub账号并创建仓库" class="headerlink" title="2.注册GitHub账号并创建仓库"></a>2.注册GitHub账号并创建仓库</h2><ol>
<li>注册就不用我说了，创建仓库视频里有，然后这个也很简单，不会就百度（应该没人去百度的，太简单了）</li>
<li>格式要求：gfyuan.github.io</li>
<li>下面两个东西选其一我在视频里面没有演示，因为我早已经弄好了，你们看着弄。</li>
<li><a href="https://www.xuanfengge.com/using-ssh-key-link-github-photo-tour.html">参考文档（可能用到）——GitHub的ssh密匙添加：</a></li>
<li><a href="https://www.jianshu.com/p/3f4b2ede5a93">参考文档（可能用到）——Gitee的ssh密匙添加：</a></li>
</ol>
<h2 id="3-快速利用hexo搭建博客："><a href="#3-快速利用hexo搭建博客：" class="headerlink" title="3.快速利用hexo搭建博客："></a>3.快速利用hexo搭建博客：</h2><ol>
<li><a href="https://hexoscript.gitbook.io/hexo-script/">脚本教程</a></li>
<li><a href="https://blog.csdn.net/jspnetcn/article/details/104111651">matery主题安装及优化</a></li>
</ol>
</li>
</ul>
<p><a href="https://github.com/blinkfox/hexo-theme-matery">matery主题官网：</a></p>
<h2 id="博客搭建完成"><a href="#博客搭建完成" class="headerlink" title="博客搭建完成"></a>博客搭建完成</h2><p><a href="http://feng-pan-fp.gitee.io/blog/">我的博客</a></p>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul>
<li>自行下载</li>
<li>vs code</li>
</ul>
<h2 id="需要的编辑软件"><a href="#需要的编辑软件" class="headerlink" title="需要的编辑软件"></a>需要的编辑软件</h2><ul>
<li>Typora<br>个人建议在国内的网站上面下载，不要去官网，下载慢</li>
<li>VS code<br>轻量级文档编辑器</li>
</ul>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1586329259&di=4b52fb528ca0962c5b80fef165441db4&src=http://image.cilacila.com/uploads/20190112/21/1547301428-yHBpuVbPFO.jpg" alt="img"></p>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://code.visualstudio.com/">VScode下载地址</a></p>
]]></content>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>原生JS实现轮播图详细含源码</title>
    <url>/feng-pan-fp/myblog.git/2021/04/20/slideshow/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h1 id="我们程序猿这一行，重要的不是会写，而且能简介别人的绝对不自己写-但是首先自己要能看得懂-哈哈"><a href="#我们程序猿这一行，重要的不是会写，而且能简介别人的绝对不自己写-但是首先自己要能看得懂-哈哈" class="headerlink" title="我们程序猿这一行，重要的不是会写，而且能简介别人的绝对不自己写,(但是首先自己要能看得懂~哈哈)"></a>我们程序猿这一行，重要的不是会写，而且能简介别人的绝对不自己写,(但是首先自己要能看得懂~哈哈)</h1><h1 id="1-静态布局介绍"><a href="#1-静态布局介绍" class="headerlink" title="1.静态布局介绍"></a>1.静态布局介绍</h1><h1 id="1-1-HTML布局介绍"><a href="#1-1-HTML布局介绍" class="headerlink" title="1.1 HTML布局介绍"></a>1.1 HTML布局介绍</h1><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>all<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>box<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./img/img1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./img/img2.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./img/img3.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./img/img4.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./img/img1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./img/img2.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./img/img3.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>current<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>arr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&lt;">&amp;lt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&gt;">&amp;gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="1-2-CSS代码"><a href="#1-2-CSS代码" class="headerlink" title="1.2 CSS代码"></a>1.2 CSS代码</h1><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">* </span><span class="token punctuation">{</span>
            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
            <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token class">.all</span> </span><span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>
            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">7</span>px<span class="token punctuation">;</span>
            <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>
            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">100</span>px auto<span class="token punctuation">;</span>
            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token class">.screen</span> </span><span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>
            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token class">.screen</span> li </span><span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>
            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token class">.screen</span> ul </span><span class="token punctuation">{</span>
            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">3000</span>px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token class">.all</span> ol </span><span class="token punctuation">{</span>
            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
            <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>
            <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>
            <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>
            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token class">.all</span> ol li </span><span class="token punctuation">{</span>
            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>
            <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>
            <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>
            <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token class">.all</span> ol li<span class="token class">.current</span> </span><span class="token punctuation">{</span>
            <span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token id">#arr</span> </span><span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token id">#arr</span> span </span><span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>
            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>
            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>
            <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">20</span>px<span class="token punctuation">;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span>
            <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>
            <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>
            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
            <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
            <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'黑体'</span><span class="token punctuation">;</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>
            <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.3</span><span class="token punctuation">;</span>
            <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#fff</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector"><span class="token id">#arr</span> <span class="token id">#right</span> </span><span class="token punctuation">{</span>
            <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>
            <span class="token property">left</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="核心思路就是在最后一张图后面再加一张与第一张一模一样的图，记得ul宽度要放得下所有图片"><a href="#核心思路就是在最后一张图后面再加一张与第一张一模一样的图，记得ul宽度要放得下所有图片" class="headerlink" title="核心思路就是在最后一张图后面再加一张与第一张一模一样的图，记得ul宽度要放得下所有图片"></a>核心思路就是在最后一张图后面再加一张与第一张一模一样的图，记得ul宽度要放得下所有图片</h1><p>效果图如下：</p>
<p><img src="https://img-blog.csdnimg.cn/20200603163401881.png" alt="img"></p>
<p><strong>实现的大概思路就是，ul里面放图片，然后给ul绝对定位，通过动画来改变ul定位位置，每次移动一个图片宽的距离</strong></p>
<p><img src="https://img-blog.csdnimg.cn/2020060316365494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDQyNzk5OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>overflow:hidden，溢出隐藏效果如下图：</p>
<p><img src="https://img-blog.csdnimg.cn/20200603163740235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDQyNzk5OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="2-核心js代码及思路"><a href="#2-核心js代码及思路" class="headerlink" title="2.核心js代码及思路"></a>2.核心js代码及思路</h2><p>开发思路：<br>\1. 获取页面元素<br>\2. 完成事件1 ： 鼠标移入移出box<br>\3. 完成事件2 : 鼠标单击上一页下一页<br>\4. 完成事件3 : 鼠标单击页码</p>
<p>接下来根据思路一步一步实现吧~</p>
<p><strong>1. 获取页面元素</strong></p>
<pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//1. 获取页面元素</span>
    <span class="token keyword">var</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取大盒子</span>
    <span class="token keyword">var</span> screen <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.screen'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取图片展示区</span>
    <span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取ul列表</span>
    <span class="token keyword">var</span> olList <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'ol>li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取ol页码</span>
    <span class="token keyword">var</span> arr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#arr'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取上下页</span>
    <span class="token keyword">var</span> left <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#left'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取上一页</span>
    <span class="token keyword">var</span> right <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#right'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取下一页</span>

    <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//申明变量存储下标</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>2. 完成事件1 ： 鼠标移入移出box</strong></p>
<pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//2. 完成事件1 ： 鼠标移入移出box 显示/隐藏上下页</span>
    <span class="token comment" spellcheck="true">//鼠标移入</span>
    box<span class="token punctuation">.</span>onmouseover<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        arr<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment" spellcheck="true">//鼠标移出</span>
    box<span class="token punctuation">.</span>onmouseout<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        arr<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>3. 完成事件2 : 鼠标单击上一页下一页</strong><br>完成上下页之前，首先准备一个缓动动画函数，次函数详情可见：</p>
<pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//移动函数</span>
    <span class="token keyword">function</span> <span class="token function">animationSlow</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span>target<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//1.清除以前定时器，以本次为准</span>
        <span class="token function">clearInterval</span><span class="token punctuation">(</span>ele<span class="token punctuation">.</span>timeID<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//2.开启定时器</span>
        ele<span class="token punctuation">.</span>timeID <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//2.1获取元素当前位置</span>
            <span class="token keyword">var</span> current <span class="token operator">=</span> ele<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//2.2计算每次移动距离 （目标位置 - 当前位置）/10</span>
            <span class="token keyword">var</span> step <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token operator">-</span> current<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">10</span>
            <span class="token comment" spellcheck="true">//2.3取整 大于零 从左往右 向下取整 小于零 从右往左 向下取整</span>
            step <span class="token operator">=</span> step <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span> <span class="token punctuation">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//2.4移动</span>
            current <span class="token operator">+</span><span class="token operator">=</span> step<span class="token punctuation">;</span>
            ele<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> current <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//2.5终点检测</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span> current <span class="token operator">==</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">clearInterval</span><span class="token punctuation">(</span>ele<span class="token punctuation">.</span>timeID<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>点击下一页</strong></p>
<pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//点击下一页</span>
    right<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//当下标为ul图片列表最大下标时,将下标回到0</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">==</span> ul<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            ul<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token string">'0px'</span><span class="token punctuation">;</span>
            index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        index<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token function">animationSlow</span><span class="token punctuation">(</span>ul<span class="token punctuation">,</span><span class="token operator">-</span>screen<span class="token punctuation">.</span>offsetWidth <span class="token operator">*</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//修改页码样式</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>olList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">==</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>
                olList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'current'</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                olList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
         <span class="token comment" spellcheck="true">//如果是最后一个下标 由于ol没有对应下标 此时给ol第一个页码添加样式</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">==</span> ul<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            olList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'current'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>点击上一页</strong></p>
<pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//点击上一页</span>
    left<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//当下标为0时，瞬间将下标改为ul图片列表最大下标</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token comment" spellcheck="true">// -  图片宽度        *   ul最后一张图片下标  = 显示最后一张图</span>
            ul<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>ul<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
            index <span class="token operator">=</span> ul<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        index<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token function">animationSlow</span><span class="token punctuation">(</span>ul<span class="token punctuation">,</span><span class="token operator">-</span>screen<span class="token punctuation">.</span>offsetWidth <span class="token operator">*</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//修改页码样式</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>olList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">==</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>
                olList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'current'</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                olList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>4. 完成事件3 : 鼠标单击页码</strong></p>
<pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>olList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        olList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'yemaIndex'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//给页码添加自定义样式，存储下标</span>
        olList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//获取当前点击页码下标</span>
            index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'yemaIndex'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">animationSlow</span><span class="token punctuation">(</span>ul<span class="token punctuation">,</span><span class="token operator">-</span>screen<span class="token punctuation">.</span>offsetWidth <span class="token operator">*</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//给点击的页码添加样式</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>olList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">==</span> j<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    olList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'current'</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                    olList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>到此整个轮播图就完成啦，如果需要自动轮播，将下一页点击事件封装为函数，来个定时器就可以啦~</p>
<p>记得来给博主点赞哟~~~</p>
]]></content>
      <categories>
        <category>深度学习.核心js代码及思路</category>
      </categories>
  </entry>
  <entry>
    <title>15个前端必备的学习网站 |（附视频介绍）</title>
    <url>/feng-pan-fp/myblog.git/2021/04/20/strateg-web/</url>
    <content><![CDATA[<h1 id="15个前端必备的学习网站-（附视频介绍）"><a href="#15个前端必备的学习网站-（附视频介绍）" class="headerlink" title="15个前端必备的学习网站 |（附视频介绍）"></a>15个前端必备的学习网站 |（附视频介绍）</h1><h2 id="前端开发所需掌握知识点概要"><a href="#前端开发所需掌握知识点概要" class="headerlink" title="前端开发所需掌握知识点概要"></a>前端开发所需掌握知识点概要</h2><ul>
<li><p>HTML&amp;CSS：</p>
<p>对Web标准的理解（结构、表现、行为）、浏览器内核、渲染原理、依赖管理、兼容性、CSS语法、层次关系，常用属性、布局、选择器、权重、盒模型、Hack、CSS预处理器、<br>CSS3、Flexbox、CSS Modules、Document flow、BFC、HTML5（离线 &amp; 存储、Histoy,多媒体、WebGL\SVG\Canvas）；</p>
</li>
<li><p>JavaScript：</p>
<p>数据类型、运算、对象、Function、继承、闭包、作用域、事件、Prototype、RegExp、JSON、Ajax、DOM、BOM、<br>内存泄漏、跨域、异步请求、模板引擎、模块化、Flux、同构、算法、ECMAScript6、Nodejs、HTTP、</p>
</li>
<li><p>其他：</p>
<p>主流MVVM框架(React\Vue\Angular)、Hybrid App\React Native\Weex、TypeScript、RESTFul、WEB安全、前端工程化、依赖管理、性能优化、<br>重构、团队协作、可维护、易用性、SEO、UED、前端技术选型、快速学习能力等；</p>
</li>
</ul>
<h2 id="视频介绍"><a href="#视频介绍" class="headerlink" title="视频介绍"></a>视频介绍</h2><p><a href="https://www.bilibili.com/video/BV1mk4y1d7Vm">视频传送门~</a></p>
<h2 id="前端学习网站推荐"><a href="#前端学习网站推荐" class="headerlink" title="前端学习网站推荐"></a>前端学习网站推荐</h2><p>以下排名不分先后</p>
<ul>
<li><p>OSCHINA： <a href="https://www.oschina.net/%EF%BC%88%E4%B8%AD%E6%96%87%E5%BC%80%E6%BA%90%E6%8A%80%E6%9C%AF%E4%BA%A4%E6%B5%81%E7%A4%BE%E5%8C%BA%EF%BC%89">https://www.oschina.net/（中文开源技术交流社区）</a></p>
</li>
<li><p>九章算法： <a href="https://www.jiuzhang.com/%EF%BC%88%E7%A1%85%E8%B0%B7%E9%A1%B6%E5%B0%96IT%E4%BA%BA%E5%91%98%E6%95%99%E6%8E%88%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7%EF%BC%89">https://www.jiuzhang.com/（硅谷顶尖IT人员教授面试技巧）</a></p>
</li>
<li><p>LintCode： <a href="https://www.lintcode.com/%EF%BC%88%E7%A9%BA%E5%89%8D%E5%BC%BA%E5%A4%A7%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%88%B7%E9%A2%98%E7%B3%BB%E7%BB%9F%EF%BC%89">https://www.lintcode.com/（空前强大的在线刷题系统）</a></p>
</li>
<li><p>CSDN ： <a href="https://chocolate.blog.csdn.net/%EF%BC%88%E4%BC%98%E7%A7%80%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%89">https://chocolate.blog.csdn.net/（优秀的博客）</a></p>
</li>
<li><p>掘金： <a href="https://juejin.im/%EF%BC%88%E5%B8%AE%E5%8A%A9%E5%BC%80%E5%8F%91%E8%80%85%E6%88%90%E9%95%BF%E7%9A%84%E7%A4%BE%E5%8C%BA%EF%BC%89">https://juejin.im/（帮助开发者成长的社区）</a></p>
</li>
<li><p>开源社区_深度开源：<a href="https://www.open-open.com/%EF%BC%88%E4%B8%80%E5%88%87%E5%BC%80%E6%BA%90%EF%BC%89">https://www.open-open.com/（一切开源）</a></p>
</li>
<li><p>慕课网： <a href="http://www.imooc.com/%EF%BC%88%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%A2%A6%E5%B7%A5%E5%8E%82%EF%BC%89">http://www.imooc.com/（程序员的梦工厂）</a></p>
</li>
<li><p>div.io： <a href="http://div.io/">http://div.io</a>（高质量前端资源汇聚）</p>
</li>
<li><p>推酷： <a href="https://www.tuicool.com/">https://www.tuicool.com/ </a>（IT人专属个性阅读社区）</p>
</li>
<li><p>Hacker News： <a href="https://news.ycombinator.com/news%EF%BC%88%E6%96%B0%E9%97%BB%EF%BC%89">https://news.ycombinator.com/news（新闻）</a></p>
</li>
<li><p>InfoQ： <a href="https://www.infoq.cn/%EF%BC%88%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%8F%8A%E9%A2%86%E5%9F%9F%E7%9F%A5%E8%AF%86%E4%BC%A0%E6%92%AD-%E4%B8%AD%E6%96%87%E7%89%88%EF%BC%89">https://www.infoq.cn/（软件开发及领域知识传播-中文版）</a></p>
</li>
<li><p>w3cplus： <a href="http://www.w3cplus.com/%EF%BC%88%E5%9B%BD%E5%86%85%E5%89%8D%E7%AB%AF%E8%A1%8C%E4%B8%9A%E7%9A%84%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%EF%BC%89">http://www.w3cplus.com/（国内前端行业的技术博客）</a></p>
</li>
<li><p>Stack Overflow： <a href="http://stackoverflow.com/%EF%BC%88%E4%B8%BA%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E6%8F%90%E4%BE%9B%E6%94%AF%E6%8C%81%EF%BC%89">http://stackoverflow.com/（为开发人员提供支持）</a></p>
</li>
<li><p>w3school： <a href="http://www.w3school.com.cn/%EF%BC%88%E9%A2%86%E5%85%88%E7%9A%84">http://www.w3school.com.cn/（领先的</a> Web 技术教程 - 全部免费）</p>
</li>
<li><p>MDN： <a href="https://developer.mozilla.org/zh-CN/docs/Web/%EF%BC%88Web">https://developer.mozilla.org/zh-CN/docs/Web/（Web</a> 开发技术分享）</p>
</li>
</ul>
<h2 id="官方文档推荐"><a href="#官方文档推荐" class="headerlink" title="官方文档推荐"></a>官方文档推荐</h2><ul>
<li><a href="https://docs.huihoo.com/jquery/jquery-fundamentals/zh-cn/index.html">jQuery 基本原理</a></li>
<li><a href="https://es6.ruanyifeng.com/">ECMAScript 6 入门 作者：阮一峰</a></li>
<li><a href="http://bonsaiden.github.io/JavaScript-Garden/zh/">JavaScript 秘密花园</a></li>
<li><a href="http://css.doyoe.com/">web前端开发参考手册系列之CSS参考手册</a></li>
<li><a href="https://wangdoc.com/javascript/">JavaScript 教程</a></li>
</ul>
<h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>笔记分享：<a href="https://github.com/Chocolate1999/Front-end-learning-to-organize-notes">传送门</a></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>思路重要</tag>
      </tags>
  </entry>
</search>
